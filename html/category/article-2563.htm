<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2563.htm" />
    <title>java多线程之自定义消息队列 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>java多线程之自定义消息队列</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h4>说明</h4> <blockquote> <p>这里将自己定义实现一个消息队列，该消息队列可以手动配置队列容量，可以供生产者生产消息，可以供消费者消费消息。</p> </blockquote> <h4>1、自定义消息队列</h4> <p><strong>消息类</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">Message</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 消息ID</span><span class="token keyword">private</span><span class="token keyword">final</span><span class="token keyword">int</span> id<span class="token punctuation">;</span><span class="token comment">// 消息内容</span><span class="token keyword">private</span><span class="token keyword">final</span><span class="token class-name">Object</span> message<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token keyword">final</span><span class="token keyword">int</span> id<span class="token punctuation">,</span><span class="token keyword">final</span><span class="token class-name">Object</span> message<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token operator">=</span> id<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token operator">=</span> message<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p><strong>消息队列类</strong></p> <blockquote> <p>根据面向对象的思想，消息队列需要提供put消息和take消息的方法。</p> </blockquote> <pre><code class="prism language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MessageQuene</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**      * 双向队列      */</span><span class="token keyword">private</span><span class="token keyword">final</span><span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">Message</span><span class="token punctuation">></span></span> queue<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation"><</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/**      * 消息队列的容量，默认容量110      */</span><span class="token keyword">private</span><span class="token keyword">int</span> capacity<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token class-name">MessageQuene</span><span class="token punctuation">(</span><span class="token keyword">final</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>capacity<span class="token operator">=</span> capacity<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 向消息队列put消息      */</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">final</span><span class="token class-name">Message</span> message<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">InterruptedException</span><span class="token punctuation">{<!-- --></span><span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 超出容量，则在这里等待消费者取走消息</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token keyword">this</span><span class="token punctuation">.</span>capacity<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"消息队列已满，等待消费者消费消息....."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 从尾部加，从头部取</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/**      * 从消息队列获取消息      */</span><span class="token keyword">public</span><span class="token class-name">Message</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">InterruptedException</span><span class="token punctuation">{<!-- --></span><span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"消息队列已空，等待生产者生产消息....."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 这里将中断异常抛出</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 从尾部加，从头部取，取出后就从队列删除</span><span class="token keyword">final</span><span class="token class-name">Message</span> message<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">pollFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> message<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h4>2、自定义消息队列测试</h4> <pre><code class="prism language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MessageQueneTest</span><span class="token punctuation">{<!-- --></span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">MessageQuene</span> messageQuene<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">MessageQuene</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">final</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 消费者不断从队列中消费消息</span><span class="token keyword">final</span><span class="token class-name">Thread</span> t1<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">MessageQueneTest</span><span class="token operator">::</span><span class="token function">consumeMessage</span><span class="token punctuation">,</span><span class="token string">"t1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">final</span><span class="token class-name">Thread</span> t2<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">MessageQueneTest</span><span class="token operator">::</span><span class="token function">consumeMessage</span><span class="token punctuation">,</span><span class="token string">"t2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 生产者，不断向队列中生产消息</span><span class="token keyword">final</span><span class="token class-name">Thread</span> t3<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">MessageQueneTest</span><span class="token operator">::</span><span class="token function">putMessage</span><span class="token punctuation">,</span><span class="token string">"t3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         t2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         t3<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">final</span><span class="token class-name">Message</span> message<span class="token operator">=</span> messageQuene<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"消费者消费到消息，id = {}，message = {}"</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">final</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">putMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">final</span><span class="token class-name">String</span> message<span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">final</span><span class="token keyword">int</span> id<span class="token operator">=</span><span class="token class-name">RandomUtils</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"生产者生产消息，id = {}，message = {}"</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>                 messageQuene<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">Message</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">final</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p><strong>测试结果</strong></p> <pre><code class="prism language-xml">11:27:58.787 [t1] INFO com.wp.juc.hm.test.MessageQuene - 消息队列已空，等待生产者生产消息..... 11:27:58.794 [t2] INFO com.wp.juc.hm.test.MessageQuene - 消息队列已空，等待生产者生产消息..... 11:27:58.802 [t3] INFO com.wp.juc.hm.test.MessageQueneTest - 生产者生产消息，id = 872383243，message = 0b06d297-a59a-4a47-9f78-ddd36eb332fc 11:27:58.805 [t1] INFO com.wp.juc.hm.test.MessageQuene - 消息队列已空，等待生产者生产消息..... 11:27:58.805 [t2] INFO com.wp.juc.hm.test.MessageQueneTest - 消费者消费到消息，id = 872383243，message = 0b06d297-a59a-4a47-9f78-ddd36eb332fc 11:27:58.805 [t2] INFO com.wp.juc.hm.test.MessageQuene - 消息队列已空，等待生产者生产消息..... 11:27:59.809 [t3] INFO com.wp.juc.hm.test.MessageQueneTest - 生产者生产消息，id = 773935934，message = 0fe599b8-bf43-41e7-9158-96a6d12b8a25</code></pre> </div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2562.htm">Shell基础 — 10、Bash中的特殊符号详解</a></p>
                                                        <p>下一个：<a href="/html/category/article-2564.htm">Shell基础Bash基本功能（多命令顺序执行）</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7230.htm" title="梅林（梅林午餐肉）">梅林（梅林午餐肉）</a></li>
                        <li class="py-2"><a href="/html/category/article-7552.htm" title="流浪宠物领养平台官网（流浪宠物领养平台官网下载）">流浪宠物领养平台官网（流浪宠物领养平台官网下载）</a></li>
                        <li class="py-2"><a href="/html/category/article-6586.htm" title="开宠物店基本要懂的（开宠物店基本要懂的哪些知识）">开宠物店基本要懂的（开宠物店基本要懂的哪些知识）</a></li>
                        <li class="py-2"><a href="/html/category/article-7046.htm" title="宠物零食制作教程风干（宠物自制风干零食）">宠物零食制作教程风干（宠物自制风干零食）</a></li>
                        <li class="py-2"><a href="/html/category/article-6770.htm" title="北京中农大动物医院有限公司招聘信息（北京中农大动物药业官网）">北京中农大动物医院有限公司招聘信息（北京中农大动物药业官网）</a></li>
                        <li class="py-2"><a href="/html/category/article-6679.htm" title="猫粮所有品牌app下载大全（猫粮品牌十大排行知乎）">猫粮所有品牌app下载大全（猫粮品牌十大排行知乎）</a></li>
                        <li class="py-2"><a href="/html/category/article-7277.htm" title="新手怎么联系厂家进货没有电话（怎样联系厂家拿到最便宜的货）">新手怎么联系厂家进货没有电话（怎样联系厂家拿到最便宜的货）</a></li>
                        <li class="py-2"><a href="/html/category/article-7368.htm" title="专门买宠物的APP（专门买宠物的软件）">专门买宠物的APP（专门买宠物的软件）</a></li>
                        <li class="py-2"><a href="/html/category/article-7323.htm" title="买二手电脑要注意什么?什么牌子的好用(买二手电脑要注意什么?什么牌子的好呢)">买二手电脑要注意什么?什么牌子的好用(买二手电脑要注意什么?什么牌子的好呢)</a></li>
                        <li class="py-2"><a href="/html/category/article-6211.htm" title="宠物粮食利润大吗知乎文章（宠物粮食成本）">宠物粮食利润大吗知乎文章（宠物粮食成本）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>