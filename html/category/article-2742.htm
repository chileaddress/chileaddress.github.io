<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2742.htm" />
    <title>常用python编程模板汇总 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>常用python编程模板汇总</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="htmledit_views"> <p>在我们编程时，有一些代码是固定的，例如Socket连接的代码，读取文件内容的代码，一般情况下我都是到网上搜一下然后直接粘贴下来改一改，当然如果你能自己记住所有的代码那更厉害，但是自己写毕竟不如粘贴来的快，而且自己写的代码还要测试，而一段经过测试的代码则可以多次使用，所以这里我就自己总结了一下&nbsp;python>>>中常用的编程模板，如果还有哪些漏掉了请大家及时补充哈。</p> <h1><strong>一、读写文件</strong></h1> <p><strong>1、读文件</strong></p> <p>（1）、一次性读取全部内容</p> <blockquote> <p>filepath='D:/data.txt'#文件路径</p> <p>with open(filepath, 'r') as f:</p> <p>&nbsp;&nbsp;printf.read()</p> </blockquote> <p>（2）读取固定字节大小</p> <blockquote> <p># -*- coding: UTF-8 -*-</p> <p>filepath='D:/data.txt'#文件路径</p> <p>f =open(filepath, 'r')</p> <p>content=""</p> <p>try:</p> <p>&nbsp;&nbsp;whileTrue:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;chunk =f.read(8)</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;ifnotchunk:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;content+=chunk</p> <p>finally:</p> <p>&nbsp;&nbsp;f.close()</p> <p>&nbsp;&nbsp;printcontent</p> </blockquote> <p>（3）每次读取一行</p> <blockquote> <p># -*- coding: UTF-8 -*-</p> <p>filepath='D:/data.txt'#文件路径</p> <p>f =open(filepath, "r")</p> <p>content=""</p> <p>try:</p> <p>&nbsp;&nbsp;whileTrue:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;line =f.readline()</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;ifnotline:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;content+=line</p> <p>finally:</p> <p>&nbsp;&nbsp;f.close()</p> <p>&nbsp;&nbsp;printcontent</p> </blockquote> <p>（4）一次读取所有的行</p> <blockquote> <p># -*- coding: UTF-8 -*-</p> <p>filepath='D:/data.txt'#文件路径</p> <p>with open(filepath, "r") as f:</p> <p>&nbsp;&nbsp;txt_list =f.readlines()</p> <p>fori intxt_list:</p> <p>&nbsp;&nbsp;printi,</p> </blockquote> <p><strong>2、写文件</strong></p> <blockquote> <p># -*- coding: UTF-8 -*-</p> <p>filepath='D:/data1.txt'#文件路径</p> <p>with open(filepath, "w") as f: #w会覆盖原来的文件，a会在文件末尾追加</p> <p>&nbsp;&nbsp;f.write('1234')</p> </blockquote> <h1><strong>二、连接Mysql数据库</strong></h1> <p>1、连接</p> <blockquote> <p>#!/usr/bin/python</p> <p># -*- coding: UTF-8 -*-</p> <p>importMySQLdb</p> <p>DB_URL='localhost'</p> <p>USER_NAME='root'</p> <p>PASSWD='1234'</p> <p>DB_NAME='test'</p> <p># 打开数据库连接</p> <p>db =MySQLdb.connect(DB_URL,USER_NAME,PASSWD,DB_NAME)</p> <p># 使用cursor()方法获取操作游标</p> <p>cursor =db.cursor()</p> <p># 使用execute方法执行SQL语句</p> <p>cursor.execute("SELECT VERSION()")</p> <p># 使用 fetchone() 方法获取一条数据库。</p> <p>data =cursor.fetchone()</p> <p>print"Database version : %s "%data</p> <p># 关闭数据库连接</p> <p>db.close()</p> </blockquote> <p><strong>2、创建表</strong></p> <blockquote> <p><p>#!/usr/bin/python</p> <p># -*- coding: UTF-8 -*-</p> <p>importMySQLdb</p> <p># 打开数据库连接</p> <p>db =MySQLdb.connect("localhost","testuser","test123","TESTDB")</p> <p># 使用cursor()方法获取操作游标</p> <p>cursor =db.cursor()</p> <p># 如果数据表已经存在使用 execute() 方法删除表。</p> <p>cursor.execute("DROP TABLE IF EXISTS EMPLOYEE")</p> <p># 创建数据表SQL语句</p> <p>sql ="""CREATE TABLE EMPLOYEE (</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FIRST_NAME CHAR(20) NOT NULL,</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAST_NAME CHAR(20),</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AGE INT,</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEX CHAR(1),</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCOME FLOAT )"""</p> <p>cursor.execute(sql)</p> <p># 关闭数据库连接</p> <p>db.close()</p></p> </blockquote> <p><strong>3、插入</strong></p> <blockquote> <p>#!/usr/bin/python</p> <p># -*- coding: UTF-8 -*-</p> <p>importMySQLdb</p> <p># 打开数据库连接</p> <p>db =MySQLdb.connect("localhost","testuser","test123","TESTDB")</p> <p># 使用cursor()方法获取操作游标</p> <p>cursor =db.cursor()</p> <p># SQL 插入语句</p> <p>sql ="""INSERT INTO EMPLOYEE(FIRST_NAME,</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LAST_NAME, AGE, SEX, INCOME)</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VALUES ('Mac', 'Mohan', 20, 'M', 2000)"""</p> <p>try:</p> <p>&nbsp;&nbsp;# 执行sql语句</p> <p>&nbsp;&nbsp;cursor.execute(sql)</p> <p>&nbsp;&nbsp;# 提交到数据库执行</p> <p>&nbsp;&nbsp;db.commit()</p> <p>except:</p> <p>&nbsp;&nbsp;# Rollback in case there is any error</p> <p>&nbsp;&nbsp;db.rollback()</p> <p># 关闭数据库连接</p> <p>db.close()</p> </blockquote> <p><strong>4、查询</strong></p> <blockquote> <p><p>#!/usr/bin/python</p> <p># -*- coding: UTF-8 -*-</p> <p>importMySQLdb</p> <p># 打开数据库连接</p> <p>db =MySQLdb.connect("localhost","testuser","test123","TESTDB")</p> <p># 使用cursor()方法获取操作游标</p> <p>cursor =db.cursor()</p> <p># SQL 查询语句</p> <p>sql ="SELECT *FROM EMPLOYEE \</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;WHERE INCOME > '%d'" %(1000)</p> <p>try:</p> <p>&nbsp;&nbsp;# 执行SQL语句</p> <p>&nbsp;&nbsp;cursor.execute(sql)</p> <p>&nbsp;&nbsp;# 获取所有记录列表</p> <p>&nbsp;&nbsp;results =cursor.fetchall()</p> <p>&nbsp;&nbsp;forrow inresults:</p> <p>&nbsp;&nbsp;&nbsp;fname =row[0]</p> <p>&nbsp;&nbsp;&nbsp;lname =row[1]</p> <p>&nbsp;&nbsp;&nbsp;age =row[2]</p> <p>&nbsp;&nbsp;&nbsp;sex =row[3]</p> <p>&nbsp;&nbsp;&nbsp;income =row[4]</p> <p>&nbsp;&nbsp;&nbsp;# 打印结果</p> <p>&nbsp;&nbsp;&nbsp;print"fname=%s,lname=%s,age=%d,sex=%s,income=%d"%\</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(fname, lname, age, sex, income )</p> <p>except:</p> <p>&nbsp;&nbsp;print"Error: unable to fecth data"</p> <p># 关闭数据库连接</p> <p>db.close()</p></p> </blockquote> <p><strong>5、更新</strong></p> <blockquote> <p>#!/usr/bin/python</p> <p># -*- coding: UTF-8 -*-</p> <p>importMySQLdb</p> <p># 打开数据库连接</p> <p>db =MySQLdb.connect("localhost","testuser","test123","TESTDB")</p> <p># 使用cursor()方法获取操作游标</p> <p>cursor =db.cursor()</p> <p># SQL 更新语句</p> <p>sql ="UPDATE EMPLOYEE SETAGE =AGE +1</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE SEX ='%c'" %('M')</p> <p>try:</p> <p>&nbsp;&nbsp;# 执行SQL语句</p> <p>&nbsp;&nbsp;cursor.execute(sql)</p> <p>&nbsp;&nbsp;# 提交到数据库执行</p> <p>&nbsp;&nbsp;db.commit()</p> <p>except:</p> <p>&nbsp;&nbsp;# 发生错误时回滚</p> <p>&nbsp;&nbsp;db.rollback()</p> <p># 关闭数据库连接</p> <p>db.close()</p> </blockquote> <h1></h1> <h1><strong>三、Socket</strong></h1> <p><strong>1、服务器</strong></p> <blockquote> <p>fromsocket import*</p> <p>fromtime importctime</p> <p>HOST =''</p> <p>PORT =21568</p> <p>BUFSIZ =1024</p> <p>ADDR =(HOST, PORT)</p> <p>tcpSerSock =socket(AF_INET, SOCK_STREAM)</p> <p>tcpSerSock.bind(ADDR)</p> <p>tcpSerSock.listen(5)</p> <p>whileTrue:</p> <p>&nbsp;&nbsp;print'waiting for connection...'</p> <p>&nbsp;&nbsp;tcpCliSock, addr =tcpSerSock.accept()</p> <p>&nbsp;&nbsp;print'...connected from:', addr</p> <p>&nbsp;&nbsp;whileTrue:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;try:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data =tcpCliSock.recv(BUFSIZ)</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print'<', data</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcpCliSock.send('[%s] %s'%(ctime(), data))</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;except:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print'disconnect from:', addr</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcpCliSock.close()</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</p> <p>tcpSerSock.close()</p> </blockquote> <p><strong>2、客户端</strong></p> <blockquote> <p>fromsocket import*</p> <p>HOST ='localhost'</p> <p>PORT =21568</p> <p>BUFSIZ =1024</p> <p>ADDR =(HOST, PORT)</p> <p>tcpCliSock =socket(AF_INET, SOCK_STREAM)</p> <p>tcpCliSock.connect(ADDR)</p> <p>try:</p> <p>&nbsp;&nbsp;whileTrue:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;data =raw_input('>')</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;ifdata =='close':</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;ifnotdata:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;tcpCliSock.send(data)</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;data =tcpCliSock.recv(BUFSIZ)</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;printdata</p> <p>except:</p> <p>&nbsp;&nbsp;tcpCliSock.close()</p> </blockquote> <h1></h1> <h1></h1> <h1><strong>四、多线程</strong></h1> <blockquote> <p>importtime, threading</p> <p># 新线程执行的代码:</p> <p>defloop():</p> <p>&nbsp;&nbsp;print'thread %s is running...'%threading.current_thread().name</p> <p>&nbsp;&nbsp;n =0</p> <p>&nbsp;&nbsp;whilen < 5:</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;n =n +1</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;print'thread %s >>> %s'%(threading.current_thread().name, n)</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;time.sleep(1)</p> <p>&nbsp;&nbsp;print'thread %s ended.'%threading.current_thread().name</p> <p>print'thread %s is running...'%threading.current_thread().name</p> <p>t =threading.Thread(target=loop, name='LoopThread')</p> <p>t.start()</p> <p>t.join()</p> <p>print'thread %s ended.'%threading.current_thread().name</p> </blockquote> <p><strong>如果对JAVA>>>、python>>>、前端、大数据、人工智能等感性趣欢迎关注我，会陆续更新哦！</strong></p> </p></div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2741.htm">Java的虚拟线程（协程）特性开启预览阶段，多线程开发的难度将大大降低</a></p>
                                                        <p>下一个：<a href="/html/category/article-2743.htm">Spring &#8211; Schedule Task 如何动态改写Cron配置</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6678.htm" title="同城免费领养宠物可靠吗知乎 同城免费领养宠物可靠吗知乎文章">同城免费领养宠物可靠吗知乎 同城免费领养宠物可靠吗知乎文章</a></li>
                        <li class="py-2"><a href="/html/category/article-6863.htm" title="猫三针疫苗多少钱（猫咪防疫针多少钱）">猫三针疫苗多少钱（猫咪防疫针多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7415.htm" title="一枫叶打一成语是什么（一片枫叶成语）">一枫叶打一成语是什么（一片枫叶成语）</a></li>
                        <li class="py-2"><a href="/html/category/article-6123.htm" title="南京宠物领养中心电话（南京领养宠物都要做什么条件）">南京宠物领养中心电话（南京领养宠物都要做什么条件）</a></li>
                        <li class="py-2"><a href="/html/category/article-5973.htm" title="宠物领养app的设计与实现论文题目（宠物领养系统国内外现状）">宠物领养app的设计与实现论文题目（宠物领养系统国内外现状）</a></li>
                        <li class="py-2"><a href="/html/category/article-6817.htm" title="动物防疫法所称动物防疫（动物防疫法所称动物防疫是指）">动物防疫法所称动物防疫（动物防疫法所称动物防疫是指）</a></li>
                        <li class="py-2"><a href="/html/category/article-6587.htm" title="瑞丽旅游景点大全(瑞丽旅游攻略必去景点推荐)">瑞丽旅游景点大全(瑞丽旅游攻略必去景点推荐)</a></li>
                        <li class="py-2"><a href="/html/category/article-6909.htm" title="宠物托运疫苗（宠物托运疫苗本需要盖章吗）">宠物托运疫苗（宠物托运疫苗本需要盖章吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-5972.htm" title="动物疫苗生产工艺流程图 动物疫苗生产工艺流程图片">动物疫苗生产工艺流程图 动物疫苗生产工艺流程图片</a></li>
                        <li class="py-2"><a href="/html/category/article-7507.htm" title="流浪猫来预示着家里要死人了（猫不请自来兆头）">流浪猫来预示着家里要死人了（猫不请自来兆头）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>