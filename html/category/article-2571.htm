<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2571.htm" />
    <title>c# Semaphore（信号量） - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>c# Semaphore（信号量）</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p><strong>参考：</strong> <br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://blog.csdn.net/feilongzaitianhehe/article/details/51460529"  target="_blank" rel="nofollow">http://blog.csdn.net/feilongzaitianhehe/article/details/51460529</a> <br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.cnblogs.com/tianzhiliang/archive/2010/08/31/1813635.html"  target="_blank" rel="nofollow">http://www.cnblogs.com/tianzhiliang/archive/2010/08/31/1813635.html</a></p> <hr/> <p>信号量说简单点就是为了线程同步，或者说是为了限制线程能运行的数量。</p> <p>那它又是怎么限制线程的数量的哩？是因为它内部有个计数器，比如你想限制最多5个线程运行，那么这个计数器的值就会被设置成5，如果一个线程调用了这个Semaphore，那么它的计数器就会相应的减1，直到这个计数器变为0。这时，如果有另一个线程继续调用这个Semaphore，那么这个线程就会被阻塞。</p> <p>获得Semaphore的线程处理完它的逻辑之后，你就可以调用它的Release()函数将它的计数器重新加1，这样其它被阻塞的线程就可以得到调用了。</p> <hr/> <p>类似互斥锁，但它可以允许多个线程同时访问一个共享资源</p> <p>通过使用一个计数器来控制对共享资源的访问，如果计数器大于0，就允许访问，如果等于0，就拒绝访问。计数器累计的是“许可证”的数目，为了访问某个资源。线程必须从信号量获取一个许可证。</p> <p>通常在使用信号量时，希望访问共享资源的线程将尝试获取一个许可证，如果信号量的计数器大于0，线程将获取一个许可证并将信号量的计数器减1，否则先线程将阻塞，直到获取一个许可证；当线程不再需要共享资源时，将释放锁拥有的许可证，并将许可证的数量加1，如果有其他的线程正在等待许可证，那么该线程将立刻获取许可证。</p> <p>另外，允许同时访问的资源的进程数量是在创建信号量时指定的，如果创建一个允许进程访问的信号量数目为1，则该信号量就和互斥锁的用法一样。</p> <pre class="prettyprint"><code class="hljs cs">        <span class="hljs-comment">//</span>         <span class="hljs-comment">// 摘要:</span>         <span class="hljs-comment">//     初始化 System.Threading.Semaphore 类的新实例，并指定初始入口数和最大并发入口数。</span>         <span class="hljs-comment">//</span>         <span class="hljs-comment">// 参数:</span>         <span class="hljs-comment">//   initialCount:</span>         <span class="hljs-comment">//     可以同时授予的信号量的初始请求数。</span>         <span class="hljs-comment">//</span>         <span class="hljs-comment">//   maximumCount:</span>         <span class="hljs-comment">//     可以同时授予的信号量的最大请求数。</span>         <span class="hljs-comment">//</span>         <span class="hljs-comment">// 异常:</span>         <span class="hljs-comment">//   T:System.ArgumentException:</span>         <span class="hljs-comment">//     initialCount 大于 maximumCount。</span>         <span class="hljs-comment">//</span>         <span class="hljs-comment">//   T:System.ArgumentOutOfRangeException:</span>         <span class="hljs-comment">//     maximumCount 为小于 1。- 或 -initialCount 小于 0。</span>         [SecuritySafeCritical]         <span class="hljs-keyword">public</span> <span class="hljs-title">Semaphore</span>(<span class="hljs-keyword">int</span> initialCount, <span class="hljs-keyword">int</span> maximumCount);</code></pre> <p>获取许可证使用WaitOne（）；</p> <p>不需要时释放使用 public int Release（），或者public int Release（int releaseCount）；</p> <hr/> <p><strong>实例：</strong></p> <pre class="prettyprint"><code class="hljs vala"><span class="hljs-keyword">using</span> System; <span class="hljs-keyword">using</span> System.Collections.Generic; <span class="hljs-keyword">using</span> System.Linq; <span class="hljs-keyword">using</span> System.Text; <span class="hljs-keyword">using</span> System.Threading; <span class="hljs-keyword">using</span> System.Threading.Tasks;  <span class="hljs-class"><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsoleApp1</span> {<!-- --></span>     <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">mythread</span>     {<!-- --></span>         <span class="hljs-keyword">public</span> Thread m_thread;         <span class="hljs-keyword">static</span> Semaphore m_semaphore = <span class="hljs-keyword">new</span> Semaphore(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);          <span class="hljs-keyword">public</span> mythread(<span class="hljs-keyword">string</span> name)         {             m_thread = <span class="hljs-keyword">new</span> Thread(<span class="hljs-keyword">this</span>.run);             m_thread.Name = name;             m_thread.Start();         }          <span class="hljs-keyword">void</span> run()         {             Console.WriteLine(m_thread.Name + <span class="hljs-string">":正在等待一个许可证..."</span>);             <span class="hljs-comment">//申请一个许可证</span>             m_semaphore.WaitOne();             Console.WriteLine(m_thread.Name + <span class="hljs-string">":申请到许可证..."</span>);              <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)             {                 Console.WriteLine(m_thread.Name + <span class="hljs-string">":"</span> + i);                 Thread.Sleep(<span class="hljs-number">1000</span>);             }              Console.WriteLine(m_thread.Name + <span class="hljs-string">":释放许可证..."</span>);             m_semaphore.Release();         }     } } </code></pre> <pre class="prettyprint"><code class="hljs vala"><span class="hljs-keyword">using</span> System; <span class="hljs-keyword">using</span> System.Collections.Generic; <span class="hljs-keyword">using</span> System.IO; <span class="hljs-keyword">using</span> System.Linq; <span class="hljs-keyword">using</span> System.Text; <span class="hljs-keyword">using</span> System.Threading.Tasks;  <span class="hljs-class"><span class="hljs-keyword">namespace</span> <span class="hljs-title">ConsoleApp1</span> {<!-- --></span>     <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span>     {<!-- --></span>         <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> Main(<span class="hljs-keyword">string</span>[] args)         {             MySemaphore();         }          <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> MySemaphore()         {             mythread thread1 = <span class="hljs-keyword">new</span> mythread(<span class="hljs-string">"Thrd # 1 "</span>);             mythread thread2 = <span class="hljs-keyword">new</span> mythread(<span class="hljs-string">"Thrd # 2 "</span>);             mythread thread3 = <span class="hljs-keyword">new</span> mythread(<span class="hljs-string">"Thrd # 3 "</span>);             mythread thread4 = <span class="hljs-keyword">new</span> mythread(<span class="hljs-string">"Thrd # 4 "</span>);             thread1.m_thread.Join();             thread2.m_thread.Join();             thread3.m_thread.Join();             thread4.m_thread.Join();         }     } } </code></pre> <hr/> <p><strong>运行结果：</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/80398ce249296da50bd8132bdda6a99f.jpg" alt="c# Semaphore（信号量）"></p> <hr/> </div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2570.htm">python小项目&#8211;2048游戏</a></p>
                                                        <p>下一个：<a href="/html/category/article-2572.htm">Python学习 3 &#8211; while 循环语句</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2819.htm" title="SpringBoot配置多个数据库源">SpringBoot配置多个数据库源</a></li>
                        <li class="py-2"><a href="/html/category/article-2813.htm" title="FreeRTOS实时操作系统的任务通知方法_操作系统">FreeRTOS实时操作系统的任务通知方法_操作系统</a></li>
                        <li class="py-2"><a href="/html/category/article-2770.htm" title="JavaCPP快速入门(官方demo增强版)">JavaCPP快速入门(官方demo增强版)</a></li>
                        <li class="py-2"><a href="/html/category/article-2807.htm" title="vue生命周期 钩子函数">vue生命周期 钩子函数</a></li>
                        <li class="py-2"><a href="/html/category/article-2792.htm" title="toString() 和 new String()用法区别">toString() 和 new String()用法区别</a></li>
                        <li class="py-2"><a href="/html/category/article-2811.htm" title="LevelDB 学习笔记5：版本控制_在线工具">LevelDB 学习笔记5：版本控制_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2787.htm" title="Vue v-for更新监测/虚拟DOM/watch侦听器">Vue v-for更新监测/虚拟DOM/watch侦听器</a></li>
                        <li class="py-2"><a href="/html/category/article-2797.htm" title="Centos7 离线安装 KVM，并安装 Csr1000v">Centos7 离线安装 KVM，并安装 Csr1000v</a></li>
                        <li class="py-2"><a href="/html/category/article-2806.htm" title="存储用户密码应该使用什么加密算法">存储用户密码应该使用什么加密算法</a></li>
                        <li class="py-2"><a href="/html/category/article-2798.htm" title="树的同构 Java">树的同构 Java</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>