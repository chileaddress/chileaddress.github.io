<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2657.htm" />
    <title>Blazor WebAssembly 渐进式 Web 应用程序 (PWA) 离线处理数据 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>Blazor WebAssembly 渐进式 Web 应用程序 (PWA) 离线处理数据</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<h2 id="windowlocalstorage">Window.localStorage</h2> <p>只读的localStorage 属性允许你访问一个Document 源（origin）的对象 Storage；存储的数据将保存在浏览器会话中。</p> <p>存储在 localStorage 的数据可以长期保留</p> <p>localStorage 中的键值对总是以字符串的形式存储。 (需要注意, 和js对象相比, 键值对总是以字符串的形式存储意味着数值类型会自动转化为字符串类型).</p> <h3 id="浏览器兼容性">浏览器兼容性</h3> <p>桌面:</p> <p>Chrome,<br /> Edge,<br /> Firefox,<br /> Internet Explorer,<br /> Opera,<br /> Safari</p> <p>移动端:</p> <p>WebView Android,<br /> Chrome Android,<br /> Firefox for Android,<br /> Opera Android,<br /> Safari on iOS,<br /> Samsung Internet</p> <h2 id="blazor-webassembly">Blazor WebAssembly</h2> <p>Blazor WebAssembly 用于使用 .NET 生成交互式客户端 Web 应用。 Blazor WebAssembly 使用无插件或将代码重新编译为其他语言的开放式 Web 标准。 Blazor WebAssembly 适用于所有新式 Web 浏览器，包括移动浏览器。</p> <p>通过 WebAssembly（缩写为 wasm），可在 Web 浏览器内运行 .NET 代码。 WebAssembly 是针对快速下载和最大执行速度优化的压缩字节码格式。 WebAssembly 是开放的 Web 标准，支持用于无插件的 Web 浏览器。</p> <p>WebAssembly 代码可通过 JavaScript（称为 JavaScript 互操作性，通常简称为 JavaScript 互操作或 JS 互操作）访问浏览器的完整功能 。 通过浏览器中的 WebAssembly 执行的 .NET 代码在浏览器的 JavaScript 沙盒中运行，沙盒提供的保护可防御客户端计算机上的恶意操作。</p> <p>当 Blazor WebAssembly 应用生成并在浏览器中运行时：</p> <ul> <li>C# 代码文件和 Razor 文件将被编译为 .NET 程序集。</li> <li>该程序集和 .NET 运行时将被下载到浏览器。</li> <li>Blazor WebAssembly 启动 .NET 运行时，并配置运行时，以为应用加载程序集。 Blazor WebAssembly 运行时使用 JavaScript 互操作来处理 DOM 操作和浏览器 API 调用。</li> </ul> <p>已发布应用的大小（其有效负载大小）是应用可用性的关键性能因素。 大型应用需要相对较长的时间才能下载到浏览器，这会损害用户体验。 Blazor WebAssembly 优化有效负载大小，以缩短下载时间：</p> <ul> <li>在中间语言 (IL) 裁边器发布应用时，会从应用删除未使用的代码。</li> <li>压缩 HTTP 响应。</li> <li>.NET 运行时和程序集缓存在浏览器中。</li> </ul> <h3 id="渐进式-web-应用程序-pwa">渐进式 Web 应用程序 (PWA)</h3> <p>Blazor 渐进式 Web 应用 (PWA) 是一种单页应用程序 (SPA)，它使用新式浏览器 API 和功能以表现得如桌面应用。</p> <p>Blazor WebAssembly 是基于标准的客户端 Web 应用平台，因此它可以使用任何浏览器 API，包括以下功能所需的 PWA API：</p> <ul> <li>脱机工作并即时加载（不受网络速度影响）。</li> <li>在自己的应用窗口中运行，而不仅仅是在浏览器窗口中运行。</li> <li>从主机操作系统的开始菜单、扩展坞或主屏幕启动。</li> <li>从后端服务器接收推送通知，即使用户没有在使用该应用。</li> <li>在后台自动更新。</li> </ul> <p>使用“渐进式”一词来描述这些应用的原因如下：</p> <ul> <li>用户可能先是在其网络浏览器中发现应用并使用它，就像任何其他单页应用程序一样。</li> <li>过了一段时间后，用户进而将其安装到操作系统中并启用推送通知。</li> </ul> <h2 id="实现">实现</h2> <p>这次主要以大家谈论比较多的 WASM PWA 为例子,其实 wasm 或 ssr 工程都是可以的完整运行的.</p> <h3 id="1新建工程n04localstorage_wasm">1.新建工程n04LocalStorage_wasm</h3> <p>新建项目选择<code>Blazor WebAssembly 应用</code> ，请选中<code>渐进式 Web 应用</code> 复选框, 工程命名为 'n04LocalStorage_wasm'</p> <p>然后右键工程,<code>管理Nugget程序包</code>添加<code>Blazored.LocalStorage</code>库到工程中.</p> <p>或者.NET CLI</p> <pre><code>dotnet new blazorwasm -o n04LocalStorage_wasm --pwa dotnet add n04LocalStorage_wasm package Blazored.LocalStorage dotnet sln add n04LocalStorage_wasm/n04LocalStorage_wasm.csproj</code></pre> <p>ssr参考</p> <pre><code>dotnet new blazorserver -o n04LocalStorage dotnet add n04LocalStorage package Blazored.LocalStorage dotnet sln add n04LocalStorage/n04LocalStorage.csproj</code></pre> <h2 id="话不多说直接上简单测试代码">话不多说,直接上简单测试代码</h2> <h3 id="1-添加服务">1. 添加服务</h3> <p>Program.cs</p> <pre><code>using Blazored.LocalStorage;  builder.Services.AddBlazoredLocalStorage();</code></pre> <h3 id="2-indexrazor">2. Index.razor</h3> <p>注入服务,编写两个方法</p> <pre><code>@using Blazored.LocalStorage;  @code{     [Inject] ILocalStorageService? localStore { get; set; }       const string noteKey = "note";     string? noteContent;      public async void UpdateLocalStorage()     {         await localStore!.SetItemAsync(noteKey, noteContent);     }      public async void ClearLocalStorage()     {         noteContent = "";         await localStore!.ClearAsync();     } }</code></pre> <h3 id="3-页面使用js需要在onafterrenderasync里执行-如果在不对的生命周期里面执行会有这句报错提示刚开始学blazor的同学应该都有遇到过">3. 页面使用js需要在OnAfterRenderAsync里执行, 如果在不对的生命周期里面执行,会有这句报错提示,刚开始学blazor的同学应该都有遇到过</h3> <pre><code>InvalidOperationException: JavaScript interop calls cannot be issued at this time. This is because the component is being statically rendered. When prerendering is enabled, JavaScript interop calls can only be performed during the OnAfterRenderAsync lifecycle method.</code></pre> <h3 id="4-读取localstorage的对象到notecontent然后刷新页面">4. 读取LocalStorage的对象到noteContent,然后刷新页面.</h3> <pre><code>    protected override async Task OnAfterRenderAsync(bool firstRender)     {         if (firstRender)         {             noteContent = await localStore!.GetItemAsync&lt;string&gt;(noteKey);             StateHasChanged();         }     }</code></pre> <h3 id="5-文本域绑定变量保存到localstorage">5. 文本域绑定变量,保存到LocalStorage</h3> <pre><code>&lt;textarea @bind="noteContent" /&gt; &lt;br /&gt; &lt;button @onclick="UpdateLocalStorage"&gt;Save&lt;/button&gt; &lt;button @onclick="ClearLocalStorage"&gt;Clear&lt;/button&gt;</code></pre> <p>浏览器按F12,查看<code>应用</code>,本地存储空间,每次保存按下,观察效果.</p> <p>重启程序,看看是否能保持上次写入的文字</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/66a056fc8f088f35af8d12b41662b641.jpg" alt="Blazor WebAssembly 渐进式 Web 应用程序 (PWA) 离线处理数据"></p> <h3 id="6改造-fetchdata">6.改造 FetchData</h3> <p>WeatherForecast类定义</p> <pre><code>public class WeatherForecast {     public DateTime Date { get; set; }=DateTime.Now;      public int TemperatureC { get; set; }      public int TemperatureF =&gt; 32 + (int)(TemperatureC / 0.5556);      public string? Summary { get; set; } = "阳光明媚";      public string? SkyColor { get; set; }   }</code></pre> <p>常规CRUD操作</p> <pre><code>    [Inject] ILocalStorageService? localStore { get; set; }       private List&lt;WeatherForecast&gt;? forecasts;     private WeatherForecast? one = new WeatherForecast();      protected override async Task OnAfterRenderAsync(bool firstRender)     {         if (firstRender)         {              forecasts = await localStore!.GetItemAsync&lt;List&lt;WeatherForecast&gt;&gt;("forecasts");             if (forecasts == null)             {                 forecasts = new List&lt;WeatherForecast&gt;();                 await localStore!.SetItemAsync("forecasts", forecasts);             }              StateHasChanged();          }     }      async void Add()     {         forecasts!.Add(one!);         one = new WeatherForecast();         await localStore!.SetItemAsync("forecasts", forecasts);     }     async void Edit()     {         await localStore!.SetItemAsync("forecasts", forecasts);     }     async void Delete(WeatherForecast weather)     {         forecasts!.Remove(weather);         await localStore!.SetItemAsync("forecasts", forecasts);     }      async void Clear()     {         forecasts!.Clear();         await localStore!.ClearAsync();     }</code></pre> <p>页面</p> <pre><code> &lt;div style="background-color :lightblue"&gt;      &lt;p&gt;         日期         &lt;input type="datetime-local" @bind-value="one!.Date" /&gt;     &lt;/p&gt;     &lt;p&gt;         温度         &lt;input type="number" @bind-value="one!.TemperatureC" /&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;input @bind-value="one!.Summary" /&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;input type="color" @bind-value="one!.SkyColor" /&gt;     &lt;/p&gt;     &lt;button @onclick="Add" class="btn btn-primary"&gt;新添&lt;/button&gt; &lt;/div&gt;  @if (forecasts == null) {     &lt;p&gt;&lt;em&gt;无数据...&lt;/em&gt;&lt;/p&gt; } else {       &lt;table class="table"&gt;         &lt;thead&gt;             &lt;tr&gt;                 &lt;th&gt;Date&lt;/th&gt;                 &lt;th&gt;Temp. (C)&lt;/th&gt;                 &lt;th&gt;Temp. (F)&lt;/th&gt;                 &lt;th&gt;Summary&lt;/th&gt;                 &lt;th&gt;SkyColor&lt;/th&gt;                 &lt;th&gt;&lt;/th&gt;                 &lt;th&gt;&lt;/th&gt;             &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;             @foreach (var forecast in forecasts)             {                 &lt;tr&gt;                     &lt;td&gt;                         &lt;input @bind-value="forecast.Date" /&gt;                     &lt;/td&gt;                     &lt;td&gt;                         &lt;input @bind-value="forecast.TemperatureC" /&gt;                     &lt;/td&gt;                     &lt;td&gt;@forecast.TemperatureF&lt;/td&gt;                     &lt;td&gt;                         &lt;input @bind-value="forecast.Summary" /&gt;                     &lt;/td&gt;                     &lt;td&gt;                         &lt;input type="color" @bind-value="forecast.SkyColor" /&gt;                     &lt;/td&gt;                     &lt;td&gt;                         &lt;button @onclick="Edit" class="btn btn-primary"&gt;编辑&lt;/button&gt;                     &lt;/td&gt;                     &lt;td&gt;                         &lt;button @onclick="(()=&gt;Delete(forecast))" class="btn btn-warning"&gt;删除&lt;/button&gt;                     &lt;/td&gt;                 &lt;/tr&gt;             }         &lt;/tbody&gt;     &lt;/table&gt;      &lt;button @onclick="Clear" class="btn btn-danger"&gt;清空&lt;/button&gt;  }</code></pre> <p>执行看看效果吧</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/0e1c8fb67fe3e9b2c67d970925937c19.jpg" alt="Blazor WebAssembly 渐进式 Web 应用程序 (PWA) 离线处理数据"></p> <h3 id="7-把页面弄到手机上试试-发送到桌面还可以假装成app--">7. 把页面弄到手机上试试, 发送到桌面还可以假装成APP :-&gt;</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/2bef92de175e49af7c2b15bab8e02ce3.jpg" alt="Blazor WebAssembly 渐进式 Web 应用程序 (PWA) 离线处理数据"></p> <p>Properties ,<code>launchSettings.json</code>修改这句</p> <pre><code> "applicationUrl": "https://localhost:7286;http://localhost:5274;https://0.0.0.0:7286;http://0.0.0.0:5274",</code></pre> <p>手机访问<code>http://192.168.1.103:5274/</code> 192.168.1.103替换为你机器ip</p> <h3 id="8-离线运行pwa">8. 离线运行PWA</h3> <p>据我测试,需要部署到域名, demo<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://testbrpwa.app1.es/"  target="_blank" rel="nofollow">https://testbrpwa.app1.es/</a></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/5f0ee4addeef469545d8ede585e46c07.jpg" alt="Blazor WebAssembly 渐进式 Web 应用程序 (PWA) 离线处理数据"></p> <p>参考资料 :<br /> PWA 网站离线访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.jianshu.com/p/f10e72797d25"  target="_blank" rel="nofollow">https://www.jianshu.com/p/f10e72797d25</a><br /> PWA离线化技术介绍<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://juejin.cn/post/6990937987697606669"  target="_blank" rel="nofollow">https://juejin.cn/post/6990937987697606669</a></p> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2656.htm">vue写一个简单的文件上传控件</a></p>
                                                        <p>下一个：<a href="/html/category/article-2658.htm">k8s单节点部署mysql_k8s deployment部署单个mysql容器实例 + service</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2789.htm" title="在日期和时间部分之间使用&#8217;T&#8217;或&#8217;Space&#8217;以外的任何其他字符返回的MySQL返回值是什么？">在日期和时间部分之间使用&#8217;T&#8217;或&#8217;Space&#8217;以外的任何其他字符返回的MySQL返回值是什么？</a></li>
                        <li class="py-2"><a href="/html/category/article-2780.htm" title="Redis缓存过期策略">Redis缓存过期策略</a></li>
                        <li class="py-2"><a href="/html/category/article-2816.htm" title="SpringBoot/Cloud项目-前台上传图片文件，Java转成Base64保存到数据库完整代码">SpringBoot/Cloud项目-前台上传图片文件，Java转成Base64保存到数据库完整代码</a></li>
                        <li class="py-2"><a href="/html/category/article-2787.htm" title="Vue v-for更新监测/虚拟DOM/watch侦听器">Vue v-for更新监测/虚拟DOM/watch侦听器</a></li>
                        <li class="py-2"><a href="/html/category/article-2795.htm" title="Python开发桌面小程序功能_python_">Python开发桌面小程序功能_python_</a></li>
                        <li class="py-2"><a href="/html/category/article-2817.htm" title="uni-app 63egg.js后端用户上线和下线深度剖析">uni-app 63egg.js后端用户上线和下线深度剖析</a></li>
                        <li class="py-2"><a href="/html/category/article-2783.htm" title="JVM将初始和最大内存大小设置为相同值的好处">JVM将初始和最大内存大小设置为相同值的好处</a></li>
                        <li class="py-2"><a href="/html/category/article-3773.htm" title="如何使用Iintelij IDEA将maven项目打包成war包，并将war包放到tomcat上运行">如何使用Iintelij IDEA将maven项目打包成war包，并将war包放到tomcat上运行</a></li>
                        <li class="py-2"><a href="/html/category/article-2802.htm" title="vue在进行增删改操作后刷新页面">vue在进行增删改操作后刷新页面</a></li>
                        <li class="py-2"><a href="/html/category/article-2814.htm" title="DataLoader 和 Dataset">DataLoader 和 Dataset</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">2</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>