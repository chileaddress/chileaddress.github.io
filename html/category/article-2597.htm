<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2597.htm" />
    <title>SpringBoot中获取profile的方法详解_java - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>SpringBoot中获取profile的方法详解_java</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">spring boot与profile</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_0_0" rel="nofollow">静态获取方式</a></li> <li><a href="#_lab2_0_1" rel="nofollow">autowire ProfileConfig</a></li> </ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>spring boot与profile</h2> <p>spring boot 的项目中不再使用xml的方式进行配置，并且，它还遵循着约定大于配置。</p> <p class="maodian"><a name="_lab2_0_0" rel="nofollow"></a></p> <h3>静态获取方式</h3> <p>静态工具类获取当前项目的profile环境。</p> <div class="ay1code"> <pre class="brush:java;">import org.springframework.beans.BeansException;  import org.springframework.context.ApplicationContext;  import org.springframework.context.ApplicationContextAware;  import org.springframework.stereotype.Component;    import java.util.Locale;    /**   *      */  /**   * @author wangjiuzhou (835540436@qq.com)   * @date 2018/10/27   * 项目名称:   * 类名: SpringContextUtil   * 描述： 获取bean的工具类，可用于在线程里面获取bean   */  @Component  public class SpringContextUtil implements ApplicationContextAware {        public static final String LOCAL_PROFILE = "local";      public static final String DEV_PROFILE = "dev";      public static final String TEST_PROFILE = "test";      public static final String PRO_PROFILE = "pro";          private static ApplicationContext context = null;          /* (non Javadoc)       * @Title: setApplicationContext       * @Description: spring获取bean工具类       * @param applicationContext       * @throws BeansException       * @see org.springframework.context.ApplicationContextAware#setApplicationContext(org.springframework.context.ApplicationContext)       */      @Override      public void setApplicationContext(ApplicationContext applicationContext)              throws BeansException {          context = applicationContext;      }         // 传入线程中      public static &lt;T&gt; T getBean(String beanName) {          return (T) context.getBean(beanName);      }         // 国际化使用      public static String getMessage(String key) {          return context.getMessage(key, null, Locale.getDefault());      }         // 获取当前环境      public static String getActiveProfile() {          return context.getEnvironment().getActiveProfiles()[0];      }  }  </pre> </div> <p>点评：</p> <p>这种方式在使用起来很方便也是现在各个博客文章所撰写的方式，在很多Service的业务代码中使用起来很方便，毕竟是静态的方式嘛！</p> <p>但是有一种缺陷，因为实现ApplicationContextAware接口，而spring中的这个接口是在所有的Bean注入完毕，才会执行setApplicationContext方法，那么问题来了，往往在项目中我们可能会对一些Bean进行一些config操作，例如：@Bean注入，而有时候我们会根据不同的profile进行不同的定制化config。这个时候恰恰我们的工具类SpringContextUtil还没有执行setApplicationContext此时工具类中的context对象还是null。就会出现异常的情况。下面的方式可以弥补这个缺陷。</p> <p class="maodian"><a name="_lab2_0_1" rel="nofollow"></a></p> <h3>autowire ProfileConfig</h3> <p>使用这种方式首先声明一下，其实就相当于一个特殊的configBean一样，因为只有这样，这个类才不会在所有bean全部加载完毕后才能获取到context。</p> <div class="ay1code"> <pre class="brush:java;">import org.springframework.beans.factory.annotation.Autowired;  import org.springframework.context.ApplicationContext;  import org.springframework.context.annotation.Configuration;    /**   * @author wangjiuzhou (835540436@qq.com)   * @date 2018/11/07   *   * 获取当前项目环境：local、dev、test、pro   */  @Configuration  public class ProfileConfig {      public static final String LOCAL_PROFILE = "local";      public static final String DEV_PROFILE = "dev";      public static final String TEST_PROFILE = "test";      public static final String PRO_PROFILE = "pro";        @Autowired      private ApplicationContext context;        public String getActiveProfile() {          return context.getEnvironment().getActiveProfiles()[0];      }  }  </pre> </div> <p>点评：</p> <p>ProfileConfig ，首先是作为一个相当于Bean的形式存在着，此处的不在解释@configuration和@component的区别；</p> <p>注入ApplicationContext因为该接口extends于EnvironmentCapable，所以可以获取到环境的一些信息；</p> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2596.htm">netty系列之:netty中各不同种类的channel详解</a></p>
                                                        <p>下一个：<a href="/html/category/article-2598.htm">Spring-Data-Redis 2.X以上版本使用心得和一些坑</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2808.htm" title="使用 Vert.X Future/Promise 编写异步代码_在线工具">使用 Vert.X Future/Promise 编写异步代码_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-4142.htm" title="嵌入式开发：执行最坏情况堆栈分析的3种方法">嵌入式开发：执行最坏情况堆栈分析的3种方法</a></li>
                        <li class="py-2"><a href="/html/category/article-2804.htm" title="java中RabbitMQ高级应用_java">java中RabbitMQ高级应用_java</a></li>
                        <li class="py-2"><a href="/html/category/article-2814.htm" title="DataLoader 和 Dataset">DataLoader 和 Dataset</a></li>
                        <li class="py-2"><a href="/html/category/article-2810.htm" title="netty系列之:netty中的核心MessageToByte编码器">netty系列之:netty中的核心MessageToByte编码器</a></li>
                        <li class="py-2"><a href="/html/category/article-4567.htm" title="上海宠物医院检验情况（上海宠物医院在线咨询）">上海宠物医院检验情况（上海宠物医院在线咨询）</a></li>
                        <li class="py-2"><a href="/html/category/article-4497.htm" title="动物疫苗工艺有哪些类型（动物疫苗工艺有哪些类型的）">动物疫苗工艺有哪些类型（动物疫苗工艺有哪些类型的）</a></li>
                        <li class="py-2"><a href="/html/category/article-2822.htm" title="centos 7redis设置开机自动启动">centos 7redis设置开机自动启动</a></li>
                        <li class="py-2"><a href="/html/category/article-4568.htm" title="瑞鹏宠物中心医院在哪里啊（瑞鹏宠物医院总院电话）">瑞鹏宠物中心医院在哪里啊（瑞鹏宠物医院总院电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-2807.htm" title="vue生命周期 钩子函数">vue生命周期 钩子函数</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>