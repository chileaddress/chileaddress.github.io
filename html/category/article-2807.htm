<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2807.htm" />
    <title>vue生命周期 钩子函数 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>vue生命周期 钩子函数</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="htmledit_views"> <h1>vue实例的生命周期：从创建到销毁的整个过程</h1> <h1>1、钩子函数</h1> <p>vue框架内置函数，随着组件的生命周期阶段，自动执行</p> <p>使用钩子函数 可以知道vue生命周期到达了什么阶段</p> <p><strong>作用：</strong>在特定的时间点执行特定的操作</p> <p><strong>分类：</strong>4大阶段8个方法（面试题）</p> <h1>2、初始化阶段</h1> <p>1、new Vue()-vue实例化(组件也是一个小vue实例)</p> <p>2、Init Events &amp;Lifecycle-初始化事件和生命周期函数</p> <p>3、<strong>beforeCreate</strong>(初始化data/methods之前)-生命周期钩子函数执行</p> <p>4、Init injection&amp;reactivity-Vue内部添加data和methods等</p> <p>5、<strong>create</strong>(初始化后-created执行)-生命周期钩子函数被执行，实例创建</p> <p>6.接下来是编译模板阶段 –开始分析</p> <p>7.Has el option? – 是否有el选项 – 检查要挂到哪里</p> <p>没有. 调用$mount()方法</p> <p>有, 继续检查template选项</p> <p><strong>结论:(兜底记住)</strong></p> <p>1、在created里操作data里变量-发起网络请求（网页打开就要数据，从这里发起请求）</p> <p>2、created函数触发能获取到data不能获取真实dom</p> <h1>3、挂载阶段</h1> <p>补充：</p> <p>真实dom和模板标签(template里写的叫模板标签)：</p> <p>template(模板标签) - vue (vue-template-compiler的包)编译(转换翻译)-解析v-for/v-model/v-if/v-html/...(vue语法)</p> <p>-&gt;虚拟dom（一个Js对象，里面保存了关键的属性和信息）</p> <p>-&gt;插入（更新）到真实dom上（网页上）</p> <p><strong>虚拟dom的好处：</strong></p> <p>1、虚拟dom的关键属性要比真实dom少（一个标签对象有200+属性）-后期做对比找差异快的多</p> <p>2、操作真实dom和虚拟dom那个快？虚拟dom(本身就是一个Js对象)</p> <hr/> <p>1.template选项检查</p> <p>有 - 编译template返回render渲染函数</p> <p>无 – 编译el选项对应标签作为template(要渲染的模板)</p> <p>2.虚拟DOM挂载成真实DOM之前</p> <p>3.<strong>beforeMount</strong> – 生命周期钩子函数被执行</p> <p>4.Create … – 把虚拟DOM和渲染的数据一并挂到真实DOM上</p> <p>5.真实DOM挂载完毕</p> <p>6.<strong>mounted</strong> – 生命周期钩子函数被执行</p> <p><strong>结论：(兜底记住)</strong></p> <p>mounted里获取真实dom，操作真实dom</p> <h2>4、更新阶段</h2> <p>1.当data里数据改变, 更新DOM之前</p> <p>2.<strong>beforeUpdate</strong>(更新之前) – 生命周期钩子函数被执行</p> <p>3.Virtual DOM…… – 虚拟DOM重新渲染, 打补丁到真实DOM</p> <p>4.<strong>updated</strong> (真实dom更新后)– 生命周期钩子函数被执行</p> <p>5.当有data数据改变 – 重复这个循环</p> <p><strong>结论(兜底记住)</strong>：</p> <p>updated里获取更新后的真实dom</p> <h2>5、销毁阶段</h2> <p>1.当$destroy()被调用 – 比如组件DOM被移除(例v-if)</p> <p>2.<strong>beforeDestroy</strong> – 生命周期钩子函数被执行</p> <p>3.拆卸数据监视器、子组件和事件侦听器</p> <p>4.实例销毁后, 最后触发一个钩子函数</p> <p>5.<strong>destroyed</strong> – 生命周期钩子函数被执行</p> <p><strong>总结：</strong>(v-if或者组件实例this.$destroyed())-&gt;此组件被销毁</p> <p>使用：销毁组件内计时器/定时器/全局事件(释放组件占用的全局资源)</p> <p><strong>如果组件被缓存，组件就不会执行销毁/初始化创建的方法</strong></p> <p><strong>这时需要知道组件被失去激活/激活时可使用以下两个钩子函数</strong></p> <h2>6、activated &nbsp;</h2> <p>&nbsp;--- 组件被激活状态</p> <h2>7、deactivated</h2> <p>--- 组件被失去激活状态</p> <p><strong>注意：</strong>第一次创建时activated也会被执行</p> </p></div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2806.htm">存储用户密码应该使用什么加密算法</a></p>
                                                        <p>下一个：<a href="/html/category/article-2808.htm">使用 Vert.X Future/Promise 编写异步代码_在线工具</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2815.htm" title="编译实战 | 手摸手教你在Windows环境下运行Redis6.x">编译实战 | 手摸手教你在Windows环境下运行Redis6.x</a></li>
                        <li class="py-2"><a href="/html/category/article-2810.htm" title="netty系列之:netty中的核心MessageToByte编码器">netty系列之:netty中的核心MessageToByte编码器</a></li>
                        <li class="py-2"><a href="/html/category/article-4460.htm" title="动物疫苗属于疫苗吗知乎（动物疫苗属于什么行业）">动物疫苗属于疫苗吗知乎（动物疫苗属于什么行业）</a></li>
                        <li class="py-2"><a href="/html/category/article-2812.htm" title="synchronized详解">synchronized详解</a></li>
                        <li class="py-2"><a href="/html/category/article-4113.htm" title="UnrealEngine创建自定义资产类型">UnrealEngine创建自定义资产类型</a></li>
                        <li class="py-2"><a href="/html/category/article-4114.htm" title="实现一个通讯录，可以用来存储1000个人的信息，每个人的信息包括：姓名，年龄，性别，电话，住址">实现一个通讯录，可以用来存储1000个人的信息，每个人的信息包括：姓名，年龄，性别，电话，住址</a></li>
                        <li class="py-2"><a href="/html/category/article-4086.htm" title="FreeRTOS实时操作系统队列基础_操作系统">FreeRTOS实时操作系统队列基础_操作系统</a></li>
                        <li class="py-2"><a href="/html/category/article-2817.htm" title="uni-app 63egg.js后端用户上线和下线深度剖析">uni-app 63egg.js后端用户上线和下线深度剖析</a></li>
                        <li class="py-2"><a href="/html/category/article-4341.htm" title="动物防疫站工作总结发言（动物防疫站工作总结发言材料）">动物防疫站工作总结发言（动物防疫站工作总结发言材料）</a></li>
                        <li class="py-2"><a href="/html/category/article-3747.htm" title="docker容器编排原来这么丝滑~">docker容器编排原来这么丝滑~</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>