<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2662.htm" />
    <title>idea集成docker实现springboot一键部署 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>idea集成docker实现springboot一键部署</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <h4> <a id="1ideadocker_0" rel="nofollow"></a>1.idea安装docker插件</h4> <p>打开Preferences-&gt;Plugins-&gt;Marketplace<br /> 搜索安装docker<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/0ff582e348d348cface1d9c62eb0e780.jpg" alt="idea集成docker实现springboot一键部署"></p> <h4> <a id="2docker_4" rel="nofollow"></a>2.配置docker</h4> <p>打开Preferences-&gt;Build,Execution,Deployment-&gt;Docker<br /> 添加docker服务<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/d4534bb67abdc647a2f99c5090a94846.jpg" alt="idea集成docker实现springboot一键部署"><br /> 若显示Connection successful，则表示添加成功<br /> docker如何开通远程可参照<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/sinat_31855011"  rel="nofollow">docker安装</a></p> <h4> <a id="3springbootpomdocker_10" rel="nofollow"></a>3.springboot项目pom添加docker打包插件</h4> <pre><code class="prism language-java">           <span class="token generics function"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>spotify<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>docker<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.0</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>将插件绑定在某个phase执行<span class="token operator">--</span><span class="token operator">&gt;</span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>executions<span class="token punctuation">&gt;</span></span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>execution<span class="token punctuation">&gt;</span></span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>id<span class="token punctuation">&gt;</span></span>build<span class="token operator">-</span>image<span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">&gt;</span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>将插件绑定在<span class="token keyword">package</span>这个phase上。也就是说，用户只需执行mvn <span class="token keyword">package</span> ，就会自动执行mvn docker<span class="token operator">:</span>build<span class="token operator">--</span><span class="token operator">&gt;</span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>phase<span class="token punctuation">&gt;</span></span><span class="token keyword">package</span><span class="token operator">&lt;</span><span class="token operator">/</span>phase<span class="token operator">&gt;</span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>goals<span class="token punctuation">&gt;</span></span>                             <span class="token generics function"><span class="token punctuation">&lt;</span>goal<span class="token punctuation">&gt;</span></span>build<span class="token operator">&lt;</span><span class="token operator">/</span>goal<span class="token operator">&gt;</span>                         <span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>execution<span class="token operator">&gt;</span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>executions<span class="token operator">&gt;</span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>指定生成的镜像名<span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>imageName<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>artifactId<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>imageName<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>指定标签<span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>imageTags<span class="token punctuation">&gt;</span></span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>imageTag<span class="token punctuation">&gt;</span></span>latest<span class="token operator">&lt;</span><span class="token operator">/</span>imageTag<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>imageTags<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 指定 Dockerfile 路径 $<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>basedir<span class="token punctuation">}</span>：项目根路径下<span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>dockerDirectory<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>basedir<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>dockerDirectory<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>指定远程 docker api地址<span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>dockerHost<span class="token punctuation">&gt;</span></span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.31</span><span class="token number">.6</span><span class="token operator">:</span><span class="token number">2375</span><span class="token operator">&lt;</span><span class="token operator">/</span>dockerHost<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这里是复制 jar 包到 docker 容器指定目录配置 <span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>resources<span class="token punctuation">&gt;</span></span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">&gt;</span></span>                             <span class="token generics function"><span class="token punctuation">&lt;</span>targetPath<span class="token punctuation">&gt;</span></span><span class="token operator">/</span><span class="token operator">&lt;</span><span class="token operator">/</span>targetPath<span class="token operator">&gt;</span>                             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>jar 包所在的路径 此处配置的 即对应 target 目录<span class="token operator">--</span><span class="token operator">&gt;</span>                             <span class="token generics function"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>directory<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">&gt;</span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　<span class="token operator">--</span><span class="token operator">&gt;</span>                             <span class="token generics function"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>finalName<span class="token punctuation">}</span><span class="token punctuation">.</span>jar<span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>                         <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>resources<span class="token operator">&gt;</span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>             <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span> </code></pre> <h4> <a id="4springbootDockerfilepom_52" rel="nofollow"></a>4.springboot项目创建Dockerfile文件（与pom文件同级）</h4> <pre><code class="prism language-java">#指定基础镜像，在其上进行定制，树莓派专用jdk FROM armhfbuild<span class="token operator">/</span>java MAINTAINER <span class="token string">"Edison"</span><span class="token operator">&lt;</span><span class="token number">631697494</span><span class="token annotation punctuation">@qq</span><span class="token punctuation">.</span>com<span class="token operator">&gt;</span>  #添加 target<span class="token operator">/</span>pi<span class="token operator">-</span>service<span class="token punctuation">.</span>jar 到容器里 ADD pi<span class="token operator">-</span>service<span class="token punctuation">.</span>jar app<span class="token punctuation">.</span>jar  #声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务 EXPOSE <span class="token number">9999</span>  #指定容器启动程序及参数   <span class="token generics function"><span class="token punctuation">&lt;</span>ENTRYPOINT<span class="token punctuation">&gt;</span></span> <span class="token string">"&lt;CMD&gt;"</span> ENTRYPOINT <span class="token punctuation">[</span><span class="token string">"java"</span><span class="token punctuation">,</span><span class="token string">"-jar"</span><span class="token punctuation">,</span><span class="token string">"app.jar"</span><span class="token punctuation">]</span> </code></pre> <h4> <a id="5_68" rel="nofollow"></a>5.服务部署</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/6ad092a0b528e2379ba24ce01304c25a.jpg" alt="idea集成docker实现springboot一键部署"><br /> 右击创建容器的时候，填入相应配置即可启动容器<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/dab962b7a47d10fdd792290e9b99116b.jpg" alt="idea集成docker实现springboot一键部署"><br /> 启动后可看到以下信息表示启动成功，可通过开放端口访问服务啦！<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/5320bb8433f637ec54d1f617bc2a4800.jpg" alt="idea集成docker实现springboot一键部署"></p> </p></div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2661.htm">jar包在linux下读取resources下文件</a></p>
                                                        <p>下一个：<a href="/html/category/article-2663.htm">java：Java编程有哪些特点?</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2842.htm" title="vue项目在打包时,如何去掉所有的console.log输出_vue.js_">vue项目在打包时,如何去掉所有的console.log输出_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-2806.htm" title="存储用户密码应该使用什么加密算法">存储用户密码应该使用什么加密算法</a></li>
                        <li class="py-2"><a href="/html/category/article-3748.htm" title="vue路由跳转router-link清除历史记录的三种方式(总结)_vue.js_">vue路由跳转router-link清除历史记录的三种方式(总结)_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-2802.htm" title="vue在进行增删改操作后刷新页面">vue在进行增删改操作后刷新页面</a></li>
                        <li class="py-2"><a href="/html/category/article-2805.htm" title="Spring Cloud Alibaba入门实践(十九)-Feign整合Sentinel">Spring Cloud Alibaba入门实践(十九)-Feign整合Sentinel</a></li>
                        <li class="py-2"><a href="/html/category/article-2800.htm" title="浅谈软件性能提升相关的概念">浅谈软件性能提升相关的概念</a></li>
                        <li class="py-2"><a href="/html/category/article-4341.htm" title="动物防疫站工作总结发言（动物防疫站工作总结发言材料）">动物防疫站工作总结发言（动物防疫站工作总结发言材料）</a></li>
                        <li class="py-2"><a href="/html/category/article-2789.htm" title="在日期和时间部分之间使用&#8217;T&#8217;或&#8217;Space&#8217;以外的任何其他字符返回的MySQL返回值是什么？">在日期和时间部分之间使用&#8217;T&#8217;或&#8217;Space&#8217;以外的任何其他字符返回的MySQL返回值是什么？</a></li>
                        <li class="py-2"><a href="/html/category/article-4386.htm" title="宠物粮供应商电话（宠物粮供应商电话是多少）">宠物粮供应商电话（宠物粮供应商电话是多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-4085.htm" title="解决flex布局,子元素大小自适应问题">解决flex布局,子元素大小自适应问题</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>