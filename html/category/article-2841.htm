<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2841.htm" />
    <title>React系列五——event事件 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>React系列五——event事件</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <blockquote> <p>从子组件传递数据给父组件</p> </blockquote> <p><strong>commentForm组件</strong></p> <pre class="prettyprint"><code class="hljs axapta"><span class="hljs-string">'use strict'</span>  import React from <span class="hljs-string">'react'</span>  <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CommentForm</span> <span class="hljs-inheritance"><span class="hljs-keyword">extends</span></span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>{<!-- --></span>     handleSubmit(event) {   <span class="hljs-comment">//作用于表单</span>         event.preventDefault();         console.log(<span class="hljs-string">'提交表单'</span>);          let author = <span class="hljs-keyword">this</span>.refs.author.value,   <span class="hljs-comment">//获取用户提交数据</span>             text = <span class="hljs-keyword">this</span>.refs.text.value;   <span class="hljs-comment">//获取用户提交数据</span>          console.log(author, text);          <span class="hljs-keyword">this</span>.props.onCommentSubmit({author, text, <span class="hljs-keyword">date</span>: <span class="hljs-string">'刚刚'</span>})     }     render() {         <span class="hljs-keyword">return</span> (             &lt;form className=<span class="hljs-string">"ui reply form"</span> onSubmit={<!-- --><span class="hljs-keyword">this</span>.handleSubmit.bind(<span class="hljs-keyword">this</span>)}&gt;                 &lt;<span class="hljs-keyword">div</span> className=<span class="hljs-string">"field"</span>&gt;                     &lt;input type=<span class="hljs-string">"text"</span> placeholder=<span class="hljs-string">"姓名"</span> ref=<span class="hljs-string">"author"</span>/&gt;                 &lt;/<span class="hljs-keyword">div</span>&gt;                 &lt;<span class="hljs-keyword">div</span> className=<span class="hljs-string">"field"</span>&gt;                     &lt;textarea placeholder=<span class="hljs-string">"评论"</span> ref=<span class="hljs-string">"text"</span>&gt;&lt;/textarea&gt;                 &lt;/<span class="hljs-keyword">div</span>&gt;                 &lt;button type=<span class="hljs-string">"submit"</span> className=<span class="hljs-string">"ui blue button"</span>&gt;添加评论&lt;/button&gt;             &lt;/form&gt;         )     } }  export { CommentForm as <span class="hljs-keyword">default</span> };   <span class="hljs-comment">//输出CommentBox组件作为默认的东西</span></code></pre> <p><strong>commentBox组件</strong></p> <pre class="prettyprint"><code class="hljs coffeescript"><span class="hljs-string">'use strict'</span>  <span class="hljs-reserved">import</span> React from <span class="hljs-string">'react'</span>; <span class="hljs-reserved">import</span> CommentList from <span class="hljs-string">'./CommentList'</span>; <span class="hljs-reserved">import</span> CommentForm from <span class="hljs-string">'./CommentForm'</span>; <span class="hljs-reserved">import</span> $ from <span class="hljs-string">'jquery'</span>  <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CommentBox</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>{<!-- --></span>     constructor(props) {         <span class="hljs-keyword">super</span>(props);         <span class="hljs-regexp">//</span>设置组件初始化状态         <span class="hljs-keyword">this</span>.state = { <span class="hljs-attribute">data</span>: [] };         <span class="hljs-keyword">this</span>.getComments();         setInterval<span class="hljs-function"><span class="hljs-params">(() =&gt; <span class="hljs-keyword">this</span>.getComments(), <span class="hljs-number">5000</span>)</span>;     } //构造函数      <span class="hljs-title">handleCommentSubmit</span><span class="hljs-params">(comment)</span> {         <span class="hljs-title">console</span>.<span class="hljs-title">log</span><span class="hljs-params">(comment)</span>;    //用户提交的内容         <span class="hljs-title">let</span> <span class="hljs-title">comments</span> = <span class="hljs-title">this</span>.<span class="hljs-title">state</span>.<span class="hljs-title">data</span>,    //获取原来提交的内容             <span class="hljs-title">newComments</span> = <span class="hljs-title">comments</span>.<span class="hljs-title">concat</span><span class="hljs-params">(comment)</span>;    //新的提交内容          <span class="hljs-title">this</span>.<span class="hljs-title">setState</span><span class="hljs-params">({data: newComments})</span>;     }      <span class="hljs-title">getComments</span><span class="hljs-params">()</span> {         <span class="hljs-title">$</span>.<span class="hljs-title">ajax</span><span class="hljs-params">({             url: <span class="hljs-keyword">this</span>.props.url,             dataType: <span class="hljs-string">'json'</span>,             cache: <span class="hljs-literal">false</span>,             success: comments =&gt; {                 <span class="hljs-keyword">this</span>.setState({data: comments})             },             error: (xhr, status, error) =&gt; {                 <span class="hljs-built_in">console</span>.log(error)             }         })</span>     }     <span class="hljs-title">render</span><span class="hljs-params">()</span> {         <span class="hljs-title">return</span><span class="hljs-params">(             &lt;div className = <span class="hljs-string">"ui comments"</span>&gt;                 &lt;h1&gt;评论&lt;/h1&gt;                 &lt;div className=<span class="hljs-string">"ui divider"</span>&gt;&lt;/div&gt;                 &lt;CommentList data = {<!-- --><span class="hljs-keyword">this</span>.state.data} /&gt;                 &lt;CommentForm onCommentSubmit={<!-- --><span class="hljs-keyword">this</span>.handleCommentSubmit.bind(<span class="hljs-keyword">this</span>)}/&gt;             &lt;/div&gt;          )</span>;     } }  <span class="hljs-title">export</span> { <span class="hljs-title">CommentBox</span> <span class="hljs-title">as</span> <span class="hljs-title">default</span> };   //输出<span class="hljs-title">CommentBox</span>组件作为默认的东西</span></code></pre> <p><strong>为什么在函数后面加.bind(this)？</strong></p> <pre class="prettyprint"><code class="hljs lasso">    handleCommentSubmit(comment) {         console<span class="hljs-built_in">.</span><span class="hljs-keyword">log</span>(comment);    <span class="hljs-comment">//用户提交的内容</span>         <span class="hljs-keyword">let</span> comments <span class="hljs-subst">=</span> this<span class="hljs-built_in">.</span>state<span class="hljs-built_in">.</span><span class="hljs-built_in">data</span>,    <span class="hljs-comment">//获取原来提交的内容</span>             newComments <span class="hljs-subst">=</span> comments<span class="hljs-built_in">.</span>concat(comment);    <span class="hljs-comment">//新的提交内容</span>          this<span class="hljs-built_in">.</span>setState({<!-- --><span class="hljs-built_in">data</span>: newComments});     }</code></pre> <p>函数中有使用到this</p> </p></div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2822.htm">centos 7redis设置开机自动启动</a></p>
                                                        <p>下一个：<a href="/html/category/article-2842.htm">vue项目在打包时,如何去掉所有的console.log输出_vue.js_</a></p>
                                                    </div>

                                                <div class="panel panel-default mt-5">
                            <div class="panel-heading">
                                <h3 class="m-0">推荐文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0">
                                                                        <li class="py-2"><a href="/html/category/article-2812.htm">synchronized详解</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2798.htm">树的同构 Java</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2797.htm">Centos7 离线安装 KVM，并安装 Csr1000v</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2788.htm">《C语言及程序设计》程序阅读——宏定义</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2740.htm">js模块 &#8211; amd cmd commonjs esm umd</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2645.htm">模板引擎Thymeleaf基本介绍和使用</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2618.htm">springboot整合微信支付过程详解（附源码，亲测可用）</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2597.htm">SpringBoot中获取profile的方法详解_java</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2565.htm">关于springboot转发重定向以及受保护目录的一些规律</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2550.htm">领域驱动模型DDD领域事件的订阅/发布实践</a></li>
                                                                    </ul>
                            </div>
                        </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2793.htm" title="OutOfMemoryError异常_在线工具">OutOfMemoryError异常_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2809.htm" title="C++11（一）">C++11（一）</a></li>
                        <li class="py-2"><a href="/html/category/article-4114.htm" title="实现一个通讯录，可以用来存储1000个人的信息，每个人的信息包括：姓名，年龄，性别，电话，住址">实现一个通讯录，可以用来存储1000个人的信息，每个人的信息包括：姓名，年龄，性别，电话，住址</a></li>
                        <li class="py-2"><a href="/html/category/article-2806.htm" title="存储用户密码应该使用什么加密算法">存储用户密码应该使用什么加密算法</a></li>
                        <li class="py-2"><a href="/html/category/article-2822.htm" title="centos 7redis设置开机自动启动">centos 7redis设置开机自动启动</a></li>
                        <li class="py-2"><a href="/html/category/article-2811.htm" title="LevelDB 学习笔记5：版本控制_在线工具">LevelDB 学习笔记5：版本控制_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2801.htm" title="手写事件发布订阅框架">手写事件发布订阅框架</a></li>
                        <li class="py-2"><a href="/html/category/article-2786.htm" title=".NET Core(.NET6)中gRPC注册到Consul详解">.NET Core(.NET6)中gRPC注册到Consul详解</a></li>
                        <li class="py-2"><a href="/html/category/article-2797.htm" title="Centos7 离线安装 KVM，并安装 Csr1000v">Centos7 离线安装 KVM，并安装 Csr1000v</a></li>
                        <li class="py-2"><a href="/html/category/article-2818.htm" title="Go 语言接口及使用接口实现链表插入">Go 语言接口及使用接口实现链表插入</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>