<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-4142.htm" />
    <title>嵌入式开发：执行最坏情况堆栈分析的3种方法 - Chile Address</title>
        <link href="/assets/website/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/website/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/website/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="/assets/website/css/style.css">
    <!--google fonts-->
    <script src="/assets/website/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/website/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>嵌入式开发：执行最坏情况堆栈分析的3种方法</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="htmledit_views"> <p>　　弄清楚如何为嵌入式应用程序和其中的任务确定堆栈的大小可能具有挑战性。在许多情况下，开发人员会选择一个他们认为应该足够的值，这些估计有时有点短，大部分时间是粗略估计，很少出现。虽然嵌入式开发人员在整个开发周期中应该监控他们的堆栈使用情况，但有时开发人员应该执行最坏情况的堆栈分析，例如：</p> <p>　　它们在 RAM 上运行得非常危险</p> <p>　　需要提交新的代码版本</p> <p>　　他们正在最终确定用于生产的固件</p> <p>　　在这篇文章中，我将讨论开发人员可以执行最坏情况堆栈分析的三种不同方式。</p> <p>　　技巧 1 – 手工计算</p> <p>　　在过去，嵌入式软件开发人员过去不得不手动计算他们的堆栈使用情况，这可能是一项棘手的工作。为了手动计算堆栈使用量，开发人员需要知道：</p> <p>　　他们要进行多少次函数调用</p> <p>　　在每个函数中将存储在堆栈中的局部变量</p> <p>　　将存储在堆栈中的返回地址的大小</p> <p>　　将存储在堆栈中的局部变量的大小</p> <p>　　如果在执行期间发生中断，中断帧将有多大</p> <p>　　可能发生的嵌套中断数</p> <p>　　正如你可以想象的那样，找到所有这些值并在进行更改时继续跟踪它们可能非常耗时且容易出错，这就是为什么不再推荐这种方法的原因，但嵌入式开发人员尝试一次以更深入地了解其他技术正在做什么仍然很有用。</p> <p class="img-center"><img fetchpriority="high" decoding="async" alt="" height="331" src="http://img.555519.xyz/uploads3/20220610/addd0da098fa4e1b4f83d50a8c582574.jpg"></p> <p>　　技巧 2 – 使用静态代码分析器</p> <p>　　许多静态代码分析器可用于估计最坏情况下的堆栈使用情况。在代码分析期间，该工具将确定函数深度以及我们之前列出的许多项目。使用静态分析器的好处在于它不仅执行堆栈分析，而且还检查代码的潜在问题。它在几秒钟内运行，这使开发人员无需手动计算堆栈使用情况。</p> <p>　　虽然使用静态代码分析器来获取最坏情况下的堆栈使用情况是一个不错的方法，但开发人员需要注意几个潜在问题。这些包括：</p> <p>　　取消引用函数指针不计为函数调用</p> <p>　　不考虑中断帧</p> <p>　　了解你的工具如何处理这些项目非常重要。为了获得准确的结果，在静态代码分析期间，必须经常使用宏或编译器符号有条件地将函数指针编译成函数调用。然后，你还必须添加你认为的中断堆栈使用情况。小问题，但在任何分析中都需要理解。</p> <p>　　技术#3 – 测试和测量</p> <p>　　对于最坏情况堆栈分析，嵌入式开发人员经常提倡的技术是测试和测量系统。许多开发环境现在都有执行OS-Aware调试的工具，这些工具将密切监视RTOS性能，包括应用程序运行时的最大堆栈使用量。下图中可以看到一个很好的示例，该示例来自使用ThreadX的Renesas Synergy平台的e2 Studio。</p> <p class="img-center"><img decoding="async" alt="" height="84" src="http://img.555519.xyz/uploads3/20220610/331af34729048ef68fadcfb1df9142c5.jpg"></p> <p>　　如你所见，每个线程(任务)都与内存位置、堆栈指针和最大堆栈使用量一起列出。我们甚至可以看到堆栈分配了多少内存。这不仅为开发人员提供了一种很好的方式来密切关注他们的堆栈使用情况，而且还可以确定他们的最大堆栈使用量是多少。</p> <p>　　开发人员确实需要小心呈现给他们的最大值。重要的是，在他们的系统处于最大压力下时进行读数。对于基于RTOS的应用程序，中断帧通常存储在系统堆栈中，因此我们无需考虑调整每个线程的大小以有足够的内存来应对中断风暴。</p> <p>　　结论</p> <p>　　无论你使用哪种技术来确定你的堆栈使用情况，稍微加大堆栈大小仍然是一个好习惯。有可能在测试期间从未实现过最坏的情况，这可能会在系统在现场时将系统设置为堆栈溢出。</p> <p>　　在本文中，我们研究了几种可用于计算最坏情况堆栈使用情况的技术。开发人员还可以使用其他几种方法，正如我们所看到的，使用现代工具在整个开发周期中监控堆栈使用情况非常容易。建议嵌入式开发人员在编写软件时，相应地监控和调整堆栈大小，以实现最高效的系统。</p> </div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-4141.htm">如何从HTML表单获取键/值数据集？</a></p>
                                                        <p>下一个：<a href="/html/category/article-4310.htm">草头饼的做法窍门(草头饼的做法视频)</a></p>
                                                    </div>

                                                <div class="panel panel-default mt-5">
                            <div class="panel-heading">
                                <h3 class="m-0">推荐文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0">
                                                                        <li class="py-2"><a href="/html/category/article-2777.htm">maven的安装和配置以及如何在IDEA中配置maven</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2770.htm">JavaCPP快速入门(官方demo增强版)</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2758.htm">vue项目打包后文件过大怎么办，如何优化加载速度</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2755.htm">R 数据可视化: PCA 主成分分析图</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2721.htm">Rancher安装bitnami metrics-server错误解决</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2692.htm">C\C++ 中 malloc、calloc、realloc 函数的用法</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2672.htm">Mysql执行流程详解</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2670.htm">网页中的动态加载(js文件和css文件即换肤)</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2651.htm">Spirngboot实现Nacos作为配置中心_在线工具</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2581.htm">数据库分片(Sharding):分表+分库+分片+分区</a></li>
                                                                    </ul>
                            </div>
                        </div>
                                            </div>
                    <div class="col-md-3">
                        
<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-9668.htm" title="给动物打疫苗要多少钱一次呢英语（给动物打疫苗要多少钱一次呢英语翻译）">给动物打疫苗要多少钱一次呢英语（给动物打疫苗要多少钱一次呢英语翻译）</a></li>
                        <li class="py-2"><a href="/html/category/article-9623.htm" title="动物医院诊疗活动范围包括哪些方面（动物医院诊室设计图）">动物医院诊疗活动范围包括哪些方面（动物医院诊室设计图）</a></li>
                        <li class="py-2"><a href="/html/category/article-9622.htm" title="宠物粮食的品牌有哪些 宠物粮食的品牌有哪些牌子">宠物粮食的品牌有哪些 宠物粮食的品牌有哪些牌子</a></li>
                        <li class="py-2"><a href="/html/category/article-9577.htm" title="宠物猫驱虫多少钱一次一 宠物猫驱虫多少钱一次?">宠物猫驱虫多少钱一次一 宠物猫驱虫多少钱一次?</a></li>
                        <li class="py-2"><a href="/html/category/article-9669.htm" title="闯关东个女人物结局是什么（电视剧闯关东中篇）">闯关东个女人物结局是什么（电视剧闯关东中篇）</a></li>
                        <li class="py-2"><a href="/html/category/article-9714.htm" title="宠物店的宠物粮好卖吗 宠物店的宠物粮好卖吗知乎">宠物店的宠物粮好卖吗 宠物店的宠物粮好卖吗知乎</a></li>
                        <li class="py-2"><a href="/html/category/article-10129.htm" title="宠物猫一般多少钱一只?（宠物猫多少钱一只正常价）">宠物猫一般多少钱一只?（宠物猫多少钱一只正常价）</a></li>
                        <li class="py-2"><a href="/html/category/article-10358.htm" title="母猫适合养吗（什么样的猫适合在家里养）">母猫适合养吗（什么样的猫适合在家里养）</a></li>
                        <li class="py-2"><a href="/html/category/article-9715.htm" title="让猫挠了出一点血有事吗（让猫挠了出血有事吗轻微的）">让猫挠了出一点血有事吗（让猫挠了出血有事吗轻微的）</a></li>
                        <li class="py-2"><a href="/html/category/article-9530.htm" title="养一只猫&#25171;&#38024;需要多少钱呢（养宠物猫需要打什么针要多少钱）">养一只猫&#25171;&#38024;需要多少钱呢（养宠物猫需要打什么针要多少钱）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">32</span> <a href="/html/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>