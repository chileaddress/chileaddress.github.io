<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2701.htm" />
    <title>KTL 一个支持C++14编辑公式的K线技术工具平台 &#8211; 第五版，支持sqlite3，全新sqlite3zz语法超简单使用sqlite3; 添加方差等统计函数。 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>KTL 一个支持C++14编辑公式的K线技术工具平台 &#8211; 第五版，支持sqlite3，全新sqlite3zz语法超简单使用sqlite3; 添加方差等统计函数。</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<p>K，K线，Candle蜡烛图。</p> <p>T，技术分析，工具平台</p> <p>L，公式Language语言使用c++14，Lite小巧简易。</p> <p>项目仓库：https://github.com/bbqz007/KTL</p> <p>国内仓库：https://gitee.com/bbqz007/KTL</p> <p>CoreAnimation for Windows:https://github.com/bbqz007/xw</p> <p>zqt5&nbsp;一个超简单的Qt5窗口语法:https://github.com/bbqz007/zhelper-qt5Widgets</p> <p>zqlite3&nbsp;一个超简单的流式语法，整合封装Sqlite3&nbsp;capis&nbsp;与 SQL&nbsp;跟 c/c++程序绑定：https://github.com/bbqz007/sqlite3zz</p> <p>KTL提供一个c++14编译平台，用户可以使用c++14编辑自定义技术指标等。</p> <p>用户可以使用crt常用函数，c++标准库容器以及算法，c++14特性编程。</p> <p>本期更新内容</p> <p>添加方差等统计函数。</p> <p>支持sqlite3 capi。</p> <p>全新sqlite3zz流式语法，超简单使用sqlite3 capi，轻松绑定SQL跟c/c++程序<img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b6232661ca265a3abf37cfe857da5433.jpg" alt="KTL 一个支持C++14编辑公式的K线技术工具平台 - 第五版，支持sqlite3，全新sqlite3zz语法超简单使用sqlite3; 添加方差等统计函数。"></p> <p>本平台在本期主要添加对sqlite3支持。</p> <p>用户可以使用sqlite3存入结果，加载数据，分析数据等。</p> <p>为方便使用sqlite3 capi，本平台开发了一个全新的sqlite3zz流式语法。</p> <p>也许你是SQL高手，但是sqlite3 capi太繁琐，无法集中业务逻辑。</p> <p>也许你轻舟熟驾CREATE, INSERT, UPDATE, SELECT，但是妨碍于不知如何整合在c/c++程序中运行，并绑定参数或结果。</p> <p>也许太多问号要绑定，SQL语句是否写对了问号数量。</p> <p>也许你忘了绑定的起始是0还是1，查文档调试太不想。</p> <p>也许...，&nbsp;还有一千零一个理由让你觉得麻烦。</p> <p>现在本平台提供一个全新的sqlite3zz流式语法。</p> <p>1. 对于基本的SQL语法应用，你甚至不用写任何SQL语句，也不必要认识SQL语法。</p> <p>2.&nbsp;简化批量插入更新流程。</p> <p>3.&nbsp;完全c++代码定义表结构。</p> <p>4.&nbsp;输出流（out << val）绑定参数变量。</p> <p>5.&nbsp;输入流（in >> val）输出结果到变量。</p> <p>6.&nbsp;自动生成SQL语句。</p> <p>7.&nbsp;编译期静态检测类型绑定。</p> <p>示例1，c++代码定义表结构。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)">1</span>   auto tbl2 =<span style="color: rgba(0, 0, 0, 1)"> make_zqlite3_table(</span><span style="color: rgba(0, 128, 128, 1)">2</span>         select_para<<span style="color: rgba(0, 0, 255, 1)">int</span>>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">),</span><span style="color: rgba(0, 128, 128, 1)">3</span>         select_para<<span style="color: rgba(0, 0, 255, 1)">string</span>>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">2</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">),</span><span style="color: rgba(0, 128, 128, 1)">4</span>         select_para<<span style="color: rgba(0, 0, 255, 1)">double</span>>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">dbl</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">),</span><span style="color: rgba(0, 128, 128, 1)">5</span>         select_para<vector<<span style="color: rgba(0, 0, 255, 1)">char</span>>>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">blob</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">),</span><span style="color: rgba(0, 128, 128, 1)">6</span>         index_para(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">2</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">),</span><span style="color: rgba(0, 128, 128, 1)">7</span>         index_para(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">1</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">2</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">));</span><span style="color: rgba(0, 128, 128, 1)">8</span><span style="color: rgba(0, 128, 128, 1)">9</span></pre> </div> <p>示例2，自动生成SQL语句</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)">1</span>     cout << tbl2.create_table_statment(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc</span><span style="color: rgba(128, 0, 0, 1)">"</span>) <<<span style="color: rgba(0, 0, 0, 1)"> endl;</span><span style="color: rgba(0, 128, 128, 1)">2</span>     cout << tbl2.insert_statment(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc</span><span style="color: rgba(128, 0, 0, 1)">"</span>) <<<span style="color: rgba(0, 0, 0, 1)"> endl;</span><span style="color: rgba(0, 128, 128, 1)">3</span>     cout << tbl2.update_statment(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc</span><span style="color: rgba(128, 0, 0, 1)">"</span>) <<<span style="color: rgba(0, 0, 0, 1)"> endl;</span><span style="color: rgba(0, 128, 128, 1)">4</span>     cout << tbl2.select_statment(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc</span><span style="color: rgba(128, 0, 0, 1)">"</span>) << endl;</pre> </div> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)">1</span> CREATE TABLE IF NOT EXISTS `abc` (`<span style="color: rgba(128, 0, 128, 1)">1</span>` INTEGER, `<span style="color: rgba(128, 0, 128, 1)">2</span>` VARCHAR, `dbl` REAL, `blob` BLOB, UNIQUE (`<span style="color: rgba(128, 0, 128, 1)">1</span>`  DESC, `<span style="color: rgba(128, 0, 128, 1)">2</span>`  DESC), UNIQUE (`<span style="color: rgba(128, 0, 128, 1)">1</span>`  DESC, `<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">`  DESC));</span><span style="color: rgba(0, 128, 128, 1)">2</span> INSERT INTO `abc` (`<span style="color: rgba(128, 0, 128, 1)">1</span>`, `<span style="color: rgba(128, 0, 128, 1)">2</span>`, `dbl`, `blob`) VALUES (?,?,?,?<span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">3</span> UPDATE `abc` SET `<span style="color: rgba(128, 0, 128, 1)">1</span>` = ?, `<span style="color: rgba(128, 0, 128, 1)">2</span>` = ?, `dbl` = ?, `blob` = ?<span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 128, 1)">4</span> SELECT `<span style="color: rgba(128, 0, 128, 1)">1</span>`, `<span style="color: rgba(128, 0, 128, 1)">2</span>`, `dbl`, `blob` FROM `abc` ;</pre> </div> <p>示例3，输出流绑定参数变量，批量插入更新。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)"> 1</span>     tbl2.open_db(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">db</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)"> 2</span>     tbl2.create_table(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)"> 3</span><span style="color: rgba(0, 0, 0, 1)">    {</span><span style="color: rgba(0, 128, 128, 1)"> 4</span>         auto oz = tbl2.insert_into(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)"> 5</span>         auto ou = tbl2.update_where(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">where `1`=? AND `2` = ?</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)"> 6</span><span style="color: rgba(0, 0, 0, 1)">        oz.begin_trans();</span><span style="color: rgba(0, 128, 128, 1)"> 7</span>         oz(<span style="color: rgba(128, 0, 128, 1)">1</span>,<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">2</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(128, 0, 128, 1)">4</span>., {<span style="color: rgba(128, 0, 128, 1)">0</span>,<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">});</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>         oz <<<span style="color: rgba(128, 0, 128, 1)">2</span> <<<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">e</span><span style="color: rgba(128, 0, 0, 1)">"</span> <<<span style="color: rgba(128, 0, 128, 1)">1</span>. << make_pair((<span style="color: rgba(0, 0, 255, 1)">char</span>*)NULL,<span style="color: rgba(128, 0, 128, 1)">0</span>) << ios_base::end<span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 128, 1)"> 9</span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (oz.ignored())</span><span style="color: rgba(0, 128, 128, 1)">10</span>             ou <<<span style="color: rgba(128, 0, 128, 1)">2</span> <<<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">e</span><span style="color: rgba(128, 0, 0, 1)">"</span> <<<span style="color: rgba(128, 0, 128, 1)">1</span>. << make_pair((<span style="color: rgba(0, 0, 255, 1)">char</span>*)NULL,<span style="color: rgba(128, 0, 128, 1)">0</span>) << where_para<<span style="color: rgba(0, 0, 255, 1)">int</span>>(<span style="color: rgba(128, 0, 128, 1)">2</span>) << where_para<<span style="color: rgba(0, 0, 255, 1)">string</span>>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">e</span><span style="color: rgba(128, 0, 0, 1)">"</span>) << ios_base::end<span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 128, 1)">11</span><span style="color: rgba(0, 0, 0, 1)">        oz.commit_trans();</span><span style="color: rgba(0, 128, 128, 1)">12</span>     }</pre> </div> <p>示例4，输入流查询count(0)输入到变量。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)">1</span> auto cnttbl = make_zqlite3_table(select_para<<span style="color: rgba(0, 0, 255, 1)">int</span>>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">count(0)</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">).expr());</span><span style="color: rgba(0, 128, 128, 1)">2</span>     cnttbl.open_db(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">db</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">    {</span><span style="color: rgba(0, 128, 128, 1)">4</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)">/ select statment would not lock the database until finalized.</span><span style="color: rgba(0, 128, 128, 1)">5</span>         auto iz6 = cnttbl.select_from(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)">6</span><span style="color: rgba(0, 0, 255, 1)">int</span> cnt =<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 128, 1)">7</span>         iz6 >> ios_base::beg >> cnt >> ios_base::end<span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 128, 1)">8</span>         cout << cnt <<<span style="color: rgba(0, 0, 0, 1)"> endl;</span><span style="color: rgba(0, 128, 128, 1)">9</span>     }</pre> </div> <p>对于上面4个示例，涉及create, insert, update, select的基本使用，完全可以不与SQL语法还有sqltie3 capi打交道。</p> <p>示例5，输入流查询内联。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 128, 1)"> 1</span> auto join =<span style="color: rgba(0, 0, 0, 1)"> make_zqlite3_table(</span><span style="color: rgba(0, 128, 128, 1)"> 2</span>         select_para<<span style="color: rgba(0, 0, 255, 1)">int</span>>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">a.`1`</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">).expr(),</span><span style="color: rgba(0, 128, 128, 1)"> 3</span>         select_para<<span style="color: rgba(0, 0, 255, 1)">int</span>>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">b.`double`</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">).expr());</span><span style="color: rgba(0, 128, 128, 1)"> 4</span><span style="color: rgba(0, 128, 128, 1)"> 5</span>     join.open_db(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">db</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)"> 6</span><span style="color: rgba(0, 0, 0, 1)">    {</span><span style="color: rgba(0, 128, 128, 1)"> 7</span>         auto ij = join.select_from2(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">abc a, table1 b limit 1</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 128, 1)"> 8</span>         auto row =<span style="color: rgba(0, 0, 0, 1)"> join.create_row();</span><span style="color: rgba(0, 128, 128, 1)"> 9</span>         ij >><span style="color: rgba(0, 0, 0, 1)"> ios_base::beg;</span><span style="color: rgba(0, 128, 128, 1)">10</span><span style="color: rgba(0, 0, 255, 1)">for</span> (; !ij.eof(); ij >><span style="color: rgba(0, 0, 0, 1)"> ios_base::beg)</span><span style="color: rgba(0, 128, 128, 1)">11</span><span style="color: rgba(0, 0, 0, 1)">        {</span><span style="color: rgba(0, 128, 128, 1)">12</span>             ij >> std::<span style="color: rgba(0, 0, 255, 1)">get</span><<span style="color: rgba(128, 0, 128, 1)">0</span>><span style="color: rgba(0, 0, 0, 1)">(row)</span><span style="color: rgba(0, 128, 128, 1)">13</span>                 >> std::<span style="color: rgba(0, 0, 255, 1)">get</span><<span style="color: rgba(128, 0, 128, 1)">1</span>><span style="color: rgba(0, 0, 0, 1)">(row)</span><span style="color: rgba(0, 128, 128, 1)">14</span>                 >><span style="color: rgba(0, 0, 0, 1)"> ios_base::end</span><span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 128, 128, 1)">16</span>             cout << std::<span style="color: rgba(0, 0, 255, 1)">get</span><<span style="color: rgba(128, 0, 128, 1)">0</span>>(row) <<<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">,</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 128, 128, 1)">17</span>                 << std::<span style="color: rgba(0, 0, 255, 1)">get</span><<span style="color: rgba(128, 0, 128, 1)">1</span>>(row) <<<span style="color: rgba(0, 0, 0, 1)"> endl;</span><span style="color: rgba(0, 128, 128, 1)">18</span><span style="color: rgba(0, 0, 0, 1)">        }</span><span style="color: rgba(0, 128, 128, 1)">19</span>     }</pre> </div> <p>下期更新更加精彩。</p> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2700.htm">vuex数据共享与多模块化</a></p>
                                                        <p>下一个：<a href="/html/category/article-2702.htm">如何在 C# 循环中捕获局部变量？</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6724.htm" title="奥拉氟牙膏哪个牌子好(儿童含氟牙膏哪个牌子好)">奥拉氟牙膏哪个牌子好(儿童含氟牙膏哪个牌子好)</a></li>
                        <li class="py-2"><a href="/html/category/article-6679.htm" title="猫粮所有品牌app下载大全（猫粮品牌十大排行知乎）">猫粮所有品牌app下载大全（猫粮品牌十大排行知乎）</a></li>
                        <li class="py-2"><a href="/html/category/article-7047.htm" title="兽医资格证考取条件（兽医资格证考取条件要求）">兽医资格证考取条件（兽医资格证考取条件要求）</a></li>
                        <li class="py-2"><a href="/html/category/article-7276.htm" title="去宠物医院绝育会不会被感染（去宠物医院绝育会不会被感染艾滋病）">去宠物医院绝育会不会被感染（去宠物医院绝育会不会被感染艾滋病）</a></li>
                        <li class="py-2"><a href="/html/category/article-7460.htm" title="动物疫苗空瓶无害化处理流程（动物疫苗空瓶回收处理制度）">动物疫苗空瓶无害化处理流程（动物疫苗空瓶回收处理制度）</a></li>
                        <li class="py-2"><a href="/html/category/article-6632.htm" title="青岛南京路动物防疫站宠物医院（青岛动物疫病防治中心南京路305号电话）">青岛南京路动物防疫站宠物医院（青岛动物疫病防治中心南京路305号电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-7598.htm" title="动物疫苗去哪里买的 动物疫苗去哪里买的到">动物疫苗去哪里买的 动物疫苗去哪里买的到</a></li>
                        <li class="py-2"><a href="/html/category/article-6954.htm" title="天恩宠物医院（天恩宠物医院怎么样）">天恩宠物医院（天恩宠物医院怎么样）</a></li>
                        <li class="py-2"><a href="/html/category/article-6633.htm" title="女士内衣进口哪些品牌值得推荐呢(女士内衣进口哪些品牌值得推荐一下)">女士内衣进口哪些品牌值得推荐呢(女士内衣进口哪些品牌值得推荐一下)</a></li>
                        <li class="py-2"><a href="/html/category/article-7230.htm" title="梅林（梅林午餐肉）">梅林（梅林午餐肉）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>