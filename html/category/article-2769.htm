<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2769.htm" />
    <title>数据库事务的四大特性和隔离级别 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>数据库事务的四大特性和隔离级别</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <p>更好阅读体验：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzI5NDM5NDM1NA==&amp;mid=2247484655&amp;idx=1&amp;sn=7f726bd31c516ec9b099e1ed25d7f1b3&amp;chksm=ec62c472db154d6418a8689be4a6024d12a48076fd47b722c414ff8e66e5b32618703964eacd#rd"  rel="nofollow">数据库事务的四大特性和隔离级别</a></p> <h1><a id="1_2" rel="nofollow"></a><strong>1.简介</strong></h1> <h2><a id="11_4" rel="nofollow"></a>1.1.事务是什么</h2> <p>事务（Transaction）是由一条或多条操作数据库的 SQL 语句组成的一个不可分割的工作单元，这些操作要么都完成，要么都回滚。一个事务往往对应一个完整的业务。</p> <h2><a id="12_8" rel="nofollow"></a>1.2.事务关键流程</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/b8264d42a83a9a24b25780ad201a4315.jpg" alt="数据库事务的四大特性和隔离级别"></p> <h1><a id="2ACID_11" rel="nofollow"></a><strong>2.事务四大特性（ACID）</strong></h1> <h2><a id="21atomicity_13" rel="nofollow"></a>2.1.原子性(atomicity)</h2> <p>事务是个完整体，不可再分（就像化学中的原子不可再分），要求所有DML语句操作必须同时成功或同时失败。</p> <h2><a id="22consistency_17" rel="nofollow"></a>2.2.一致性(consistency)</h2> <p>事务前后的数据要保持一致。 如：A有10元钱，B有20元钱。B转10元给A，完成转账后A+B的钱还是30元。</p> <h2><a id="23_isolation__21" rel="nofollow"></a>2.3.隔离性( isolation )</h2> <p>不同的事务之间互相隔离。</p> <h2><a id="24durability_25" rel="nofollow"></a>2.4.持久性(durability)</h2> <p>事务结束后，内存数据持久化的磁盘中。</p> <h1><a id="3_29" rel="nofollow"></a><strong>3.并发问题</strong></h1> <h2><a id="31_31" rel="nofollow"></a>3.1.两种数据丢失</h2> <p>第一种是指两个事务同时操作同一个数据时，当第一个事务回滚时，把已经提交的第二个事务的更新数据覆盖了，第二个事务就造成了数据丢失。<br /> 问题关键点：不同事务可以「<strong>同时修改同一条</strong>」数据。</p> <p>第二种是指当两个事务同时操作同一个数据时，第一个事务将修改结果成功提交后，对第二个事务已经提交的修改结果进行了覆盖，对第二个事务造成了数据丢失。<br /> 问题关键点：不同事务同时读了同一条数据,「<strong>某个事务修改后提交事务了</strong>」,但其他事务「<strong>并没有读最新的数据</strong>」就修改提交数据,相当于前一个事务的修改结果无效，导致数据丢失。</p> <h2><a id="32_39" rel="nofollow"></a>3.2.脏读</h2> <p>脏读是指一个事务读取了另一个未提交事务的数据。</p> <p>如：事务A读取了事务B未提交的数据，假如事务B未正确执行，回滚，则事务A读取到的就是脏数据。</p> <p>问题关键点：读了「<strong>未提交</strong>」事务的数据。</p> <h2><a id="33_47" rel="nofollow"></a>3.3.不可重复读</h2> <p>不可重复读是指一个事务对同一行数据重复读取两次，但得到的结果内容不同。</p> <p>如：一个事务执行过程中，另一事务提交并修改了当前事务正在读取的数据</p> <p>问题关键点：同一个事务多次「<strong>读条件相同</strong>」的数据，其他事务还可以「<strong>修改该条件下</strong>」的数据。</p> <h2><a id="34_55" rel="nofollow"></a>3.4.幻读</h2> <p>幻读是同一个事务的相同的两次查询的结果数不一致。</p> <p>如：一个事务执行过程中，另一个事务新增或删除了数据，导致两次相同的查询结果条数不同。</p> <p>问题关键点：同一个事务多次「<strong>读条件相同的数据</strong>」，其他事务还可以「<strong>新增或删除该条件下</strong>」的数据。</p> <blockquote> <p>❝</p> <p>解决问题????</p> <p>❞</p> </blockquote> <h2><a id="4_69" rel="nofollow"></a>4.隔离级别</h2> <p>事务分为两种：读事务和写事务。</p> <h2><a id="41Read_UnCommitted_73" rel="nofollow"></a>4.1.读未提交（Read UnCommitted)</h2> <ul> <li>多个事务能同时读未提交的数据</li> <li>一个事务读的时候其他事务还可以写</li> <li>一个事务写的时候其他事务还可以读</li> <li>但不能同时写</li> </ul> <p>解决的问题：可防止丢失更新</p> <h2><a id="42Read_Committed_82" rel="nofollow"></a>4.2.读已提交（Read Committed）</h2> <ul> <li>多个事务能同时读已提交的数据</li> <li>一个事务读的时候其他事务还可以写</li> <li>一个事务写的时候其他事务禁止所有操作</li> <li>但不能同时写</li> </ul> <p>解决的问题：可有效防止脏读。</p> <h2><a id="43Repeatable_Read_91" rel="nofollow"></a>4.3.可重复读（Repeatable Read）</h2> <ul> <li>多个事务能同时读已提交的插入数据，不能读已提交的修改数据</li> <li>一个事务读的时候其他事务只能读禁止写</li> <li>一个事务写的时候其他事务禁止所有操作</li> <li>但不能同时写</li> </ul> <p>解决的问题：可有效防止不可重复读和脏读(InnoDB存储引擎还解决了幻读问题)。</p> <h2><a id="44Serializable_100" rel="nofollow"></a>4.4.串行化（Serializable）</h2> <ul> <li>事务只能一个接着一个地执行，不能并发执行。</li> </ul> <p>解决的问题：可有效防止脏读、不可重复读和幻读。</p> <p>但这个级别可能导致大量的超时现象和锁竞争，在实际应用中很少使用。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/7626ff5587601a30453722875a708c3e.jpg" alt="数据库事务的四大特性和隔离级别"></p> <h1><a id="5_109" rel="nofollow"></a><strong>5.事务的一些常用操作</strong></h1> <h2><a id="51_111" rel="nofollow"></a>5.1.设置事务自动提交</h2> <pre><code class="prism language-sql"><span class="token comment">--查看当前会话</span><span class="token keyword">show</span><span class="token keyword">session</span> variables<span class="token operator">like</span><span class="token string">'autocommit'</span><span class="token punctuation">;</span><span class="token comment">--查看全局会话</span><span class="token keyword">show</span><span class="token keyword">global</span> variables<span class="token operator">like</span><span class="token string">'autocommit'</span><span class="token punctuation">;</span><span class="token comment">--设置当前会话</span><span class="token keyword">set</span><span class="token keyword">session</span> autocommit<span class="token operator">=</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token keyword">ON</span><span class="token operator">|</span><span class="token keyword">OFF</span><span class="token punctuation">;</span><span class="token comment">--设置全局会话</span><span class="token keyword">set</span><span class="token keyword">global</span> autocommit<span class="token operator">=</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token keyword">ON</span><span class="token operator">|</span><span class="token keyword">OFF</span><span class="token punctuation">;</span></code></pre> <p>选项：0|1|ON|OFF</p> <ul> <li>关闭：0 和 OFF</li> <li>开启：1 和 ON</li> </ul> <h2><a id="52_129" rel="nofollow"></a>5.2.设置隔离级别</h2> <pre><code class="prism language-sql"><span class="token comment">--查看当前会话</span><span class="token keyword">select</span> @<span class="token variable">@tx_isolation</span><span class="token punctuation">;</span><span class="token keyword">select</span> @<span class="token variable">@session.tx_isolation</span><span class="token punctuation">;</span><span class="token comment">--查看全局会话</span><span class="token keyword">select</span> @<span class="token variable">@global.tx_isolation</span><span class="token punctuation">;</span><span class="token keyword">show</span><span class="token keyword">global</span> variables<span class="token operator">like</span><span class="token string">'tx_isolation'</span><span class="token punctuation">;</span><span class="token comment">--设置当前会话</span><span class="token keyword">set</span> tx_isolation<span class="token operator">=</span><span class="token string">'隔离级别'</span><span class="token punctuation">;</span><span class="token comment">--设置全局会话</span><span class="token keyword">set</span><span class="token keyword">global</span><span class="token keyword">transaction</span><span class="token keyword">isolation</span><span class="token keyword">level</span> 隔离级别<span class="token punctuation">;</span></code></pre> <p>隔离级别</p> <ul> <li>read uncommitted</li> <li>read committed</li> <li>repeatable read</li> <li>serializable</li> </ul> <h1><a id="6_151" rel="nofollow"></a><strong>6.总结</strong></h1> <p>一般来说，事务的隔离级别越高，越能保证数据库的完整性和一致性，但相对来说，隔离级别越高，对并发性能的影响也越大。官方默认使用「<strong>可重复读（Repeatable Read）</strong>」 但也可以将数据库的隔离级别设置为读已提交（Read Committed），即能防止脏读，又能有较好的并发性能，关于不可重复读、幻读和第二类数据丢失这些并发问题，可通过在应用程序中采用悲观锁和乐观锁加以控制。<img decoding="async" src="http://img.555519.xyz/uploads3/20220821/93085f9e7034b0f1d25e3ca0f6e09abe.jpg" alt="数据库事务的四大特性和隔离级别"> 关注阅读更多优质文章???? 获取思维导图????公众号输入：<font color="#FF6347">dt0010</font></p> </div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2768.htm">promise与async/await的使用及区别</a></p>
                                                        <p>下一个：<a href="/html/category/article-2770.htm">JavaCPP快速入门(官方demo增强版)</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2809.htm" title="C++11（一）">C++11（一）</a></li>
                        <li class="py-2"><a href="/html/category/article-2779.htm" title="哪个标点符号可以用作MySQL时间部分之间的分隔符？">哪个标点符号可以用作MySQL时间部分之间的分隔符？</a></li>
                        <li class="py-2"><a href="/html/category/article-2820.htm" title="OpenSSL3.0.5安装">OpenSSL3.0.5安装</a></li>
                        <li class="py-2"><a href="/html/category/article-4114.htm" title="实现一个通讯录，可以用来存储1000个人的信息，每个人的信息包括：姓名，年龄，性别，电话，住址">实现一个通讯录，可以用来存储1000个人的信息，每个人的信息包括：姓名，年龄，性别，电话，住址</a></li>
                        <li class="py-2"><a href="/html/category/article-3774.htm" title="报错解决Module build failed (from ./node_modules/babel-loader/lib/index.js):">报错解决Module build failed (from ./node_modules/babel-loader/lib/index.js):</a></li>
                        <li class="py-2"><a href="/html/category/article-2814.htm" title="DataLoader 和 Dataset">DataLoader 和 Dataset</a></li>
                        <li class="py-2"><a href="/html/category/article-3140.htm" title="java 退出_JVM安全退出（如何优雅的关闭java服务）">java 退出_JVM安全退出（如何优雅的关闭java服务）</a></li>
                        <li class="py-2"><a href="/html/category/article-2805.htm" title="Spring Cloud Alibaba入门实践(十九)-Feign整合Sentinel">Spring Cloud Alibaba入门实践(十九)-Feign整合Sentinel</a></li>
                        <li class="py-2"><a href="/html/category/article-2800.htm" title="浅谈软件性能提升相关的概念">浅谈软件性能提升相关的概念</a></li>
                        <li class="py-2"><a href="/html/category/article-2817.htm" title="uni-app 63egg.js后端用户上线和下线深度剖析">uni-app 63egg.js后端用户上线和下线深度剖析</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>