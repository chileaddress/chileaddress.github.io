<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2674.htm" />
    <title>Ribbon（一）远程调用RestTemplate - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>Ribbon（一）远程调用RestTemplate</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="%E4%B8%80%E3%80%81RestTemplate%E4%BB%8B%E7%BB%8D-toc" style="margin-left:0px;">一、RestTemplate介绍</p> <p id="%E4%BA%8C%E3%80%81%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E-toc" style="margin-left:0px;">二、需求说明</p> <p id="1%E3%80%81%E4%B8%9A%E5%8A%A1%E7%BB%93%E6%9E%84%E5%8F%8A%E8%AF%B4%E6%98%8E-toc" style="margin-left:40px;">1、业务结构及说明</p> <p id="%E4%B8%89%E3%80%81%E6%A8%A1%E5%9D%97%E6%90%AD%E5%BB%BA-toc" style="margin-left:0px;">三、模块搭建</p> <p id="1%E3%80%81%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AAmaven%E9%A1%B9%E7%9B%AE-toc" style="margin-left:40px;">1、新建一个maven项目</p> <p id="2%E3%80%81%E6%B7%BB%E5%8A%A0ribbon%E4%BE%9D%E8%B5%96-toc" style="margin-left:40px;">2、添加ribbon依赖</p> <p id="3%E3%80%81%E7%BC%96%E8%BE%91yml-toc" style="margin-left:40px;">3、编辑yml</p> <p id="4%E3%80%81%E4%B8%BB%E7%A8%8B%E5%BA%8F-toc" style="margin-left:40px;">4、主程序</p> <p id="5%E3%80%81%E7%BC%96%E8%BE%91RibbonController-toc" style="margin-left:40px;">5、编辑RibbonController</p> <p id="6%E3%80%81%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E6%B5%8B%E8%AF%95-toc" style="margin-left:40px;">6、发送请求测试</p> <hr id="hr-toc"/> <p>ribbon底层封装了RestTemplate进行Rest api远程调用</p> <h1 id="%E4%B8%80%E3%80%81RestTemplate%E4%BB%8B%E7%BB%8D">一、RestTemplate介绍</h1> <p>RestTemplate是springboot提供的远程调用工具</p> <p>常用的方法：</p> <ul> <li> <span style="color:#ed7976;"><span style="background-color:#fef2f0;">getForObject()</span></span>：</li> </ul> <p>该方法是getForEntity方法的进一步封装，通过HttpMessageConverterExtractor对HTTP的请求响应体body内容进行对象转换，实现请求直接返回包装好的对象内容。有三个重载。</p> <p>getForObject(String url,Class responseType,Object ...urlVariables);</p> <p>url参数为指定访问的地址如果其中有传递的参数，使用{1}，{2}这种类型的占位符表示，responseType是参数返回结果的类型，urlVariables是前面url占位符对应的参数。</p> <p>getForObject(String url,Class responseType,Map urlVariables);</p> <p>前两个参数与前一致，最后一个参数使用Map封装替换url中出现的占位符。</p> <p>getForObject(String url,Class responseType);</p> <p>没有需要传递的参数。</p> <ul> <li><span style="color:#ed7976;"><span style="background-color:#fef2f0;">postForObject()</span></span></li> </ul> <p>用于发送post请求，与get类似</p> <p>也提供了三种重载：</p> <p>postForObject(String url,Class responseType,Object ...urlVariables);</p> <p>postForObject(String url,Class responseType,Map urlVariables);</p> <p>postForObject(String url,Class responseType);</p> <h1 id="%E4%BA%8C%E3%80%81%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E">二、需求说明</h1> <p>这里先不使用Ribbon，先单独使用RestTemplate进行远程调用</p> <h2 id="1%E3%80%81%E4%B8%9A%E5%8A%A1%E7%BB%93%E6%9E%84%E5%8F%8A%E8%AF%B4%E6%98%8E">1、业务结构及说明</h2> <p>当前是一个商品信息，用户和订单三者之间的服务，并且使用Eureka集群提供服务发现与注册</p> <p>结构及功能为：</p> <p><img fetchpriority="high" decoding="async" alt="" height="1200" src="http://img.555519.xyz/uploads/20230205/b6ab68088720eff85551991d951a730c.jpg"></p> <p>其中</p> <p>item-service 用于商品服务，其中有获取商品信息和减少库存的方法</p> <p>user-service 用于用户服务，其中有获取用户信息和增加用户积分的功能</p> <p>order-service 用于订单服务，其中有获取订单和添加订单的功能</p> <p>现在需要使用RestTemplate进行远程调用这三个服务</p> <h1 id="%E4%B8%89%E3%80%81%E6%A8%A1%E5%9D%97%E6%90%AD%E5%BB%BA">三、模块搭建</h1> <h2 id="1%E3%80%81%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AAmaven%E9%A1%B9%E7%9B%AE">1、新建一个maven项目</h2> <h2 id="2%E3%80%81%E6%B7%BB%E5%8A%A0ribbon%E4%BE%9D%E8%B5%96">2、添加ribbon依赖</h2> <p>由于Eureka-client中包含ribbon依赖，所以只需添加eureka-client依赖即可</p> <p><img decoding="async" alt="" height="317" src="http://img.555519.xyz/uploads/20230205/e90e107ff74cf4e334092716d99f4828.jpg"></p> <pre><code class="language-XML"><dependency> 	<groupId>org.springframework.cloud</groupId> 	<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> </dependency> </code></pre> <h2 id="3%E3%80%81%E7%BC%96%E8%BE%91yml">3、编辑yml</h2> <p>服务名称为ribbon，使用3001端口，并且注册到两台eureka服务器中</p> <pre><code>spring:   application:     name: ribbon      server:   port: 3001    eureka:   client:     service-url:       defaultZone: http://eureka1:2001/eureka, http://eureka2:2002/eureka </code></pre> <h2 id="4%E3%80%81%E4%B8%BB%E7%A8%8B%E5%BA%8F">4、主程序</h2> <p>添加RestTemplate实例</p> <pre><code class="language-java">package cn.tedu.sp06;  ....  @EnableDiscoveryClient @SpringBootApplication public class Sp06RibbonApplication { 	 	//创建 RestTemplate 实例，并存入 spring 容器 	@Bean 	public RestTemplate getRestTemplate() { 		return new RestTemplate(); 	}  	public static void main(String[] args) { 		SpringApplication.run(Sp06RibbonApplication.class, args); 	}  } </code></pre> <h2 id="5%E3%80%81%E7%BC%96%E8%BE%91RibbonController">5、编辑RibbonController</h2> <pre><code class="language-java">package cn.tedu.sp06.controller;  ...  @RestController public class RibbonController {  	@Autowired 	private RestTemplate rt; 	 	@GetMapping("/item-service/{orderId}") 	public JsonResult<List<Item>> getItems(@PathVariable String orderId) { 	    //向指定微服务地址发送 get 请求，并获得该服务的返回结果  	    //{1} 占位符，用 orderId 填充 		return rt.getForObject("http://localhost:8001/{1}", JsonResult.class, orderId); 	}  	@PostMapping("/item-service/decreaseNumber") 	public JsonResult decreaseNumber(@RequestBody List<Item> items) { 	    //发送 post 请求 		return rt.postForObject("http://localhost:8001/decreaseNumber", items, JsonResult.class); 	}  	// 	 	@GetMapping("/user-service/{userId}") 	public JsonResult<User> getUser(@PathVariable Integer userId) { 		return rt.getForObject("http://localhost:8101/{1}", JsonResult.class, userId); 	}  	@GetMapping("/user-service/{userId}/score")  	public JsonResult addScore( 			@PathVariable Integer userId, Integer score) { 		return rt.getForObject("http://localhost:8101/{1}/score?score={2}", JsonResult.class, userId, score); 	} 	 	// 	 	@GetMapping("/order-service/{orderId}") 	public JsonResult<Order> getOrder(@PathVariable String orderId) { 		return rt.getForObject("http://localhost:8201/{1}", JsonResult.class, orderId); 	}  	@GetMapping("/order-service") 	public JsonResult addOrder() { 		return rt.getForObject("http://localhost:8201/", JsonResult.class); 	} } </code></pre> <p><strong>注意：</strong></p> <p><strong>1、可以看出，用户发送请求首先到RibbonController然后通过这里转发到对应的服务路径，实现远程调用。</strong></p> <p><strong>2、携带参数的GET请求，会使用{1}表示占位符进行转发。</strong></p> <h2 id="6%E3%80%81%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E6%B5%8B%E8%AF%95">6、发送请求测试</h2> <p>根据RibbonController的路径发送请求</p> <p><span style="color:#ed7976;"><span style="background-color:#fef2f0;">http://localhost:3001/item-service/35</span></span></p> <p>使用postman发送</p> <p><span style="color:#ed7976;"><span style="background-color:#fef2f0;">http://localhost:3001/item-service/decreaseNumber</span></span></p> <p><span style="color:#ed7976;"><span style="background-color:#fef2f0;">[{"id":1,"name":"abc","number":100},{"id":2,"name":"def","number":200}]</span></span></p> <p><span style="color:#ed7976;"><span style="background-color:#fef2f0;">http://localhost:3001/user-service/10</span></span></p> <p><span style="color:#ed7976;"><span style="background-color:#fef2f0;">http://localhost:3001/user-service/10/score?score=100</span></span></p> <p><span style="color:#ed7976;"><span style="background-color:#fef2f0;">http://localhost:3001/order-service/20</span></span></p> <p><span style="color:#ed7976;"><span style="background-color:#fef2f0;">http://localhost:3001/order-service</span></span></p> <p>浏览器发送请求先到ribbon服务器的RibbonController，之后通过RestTemplate的getForObject或postForObject方法分别远程调用到item-service、user-service、ordder-service。</p> <p><img decoding="async" alt="" height="1153" src="http://img.555519.xyz/uploads/20230205/94f1d00cbaeb44dc9b98041c9167c903.jpg"></p> </p></div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2673.htm">java8新特性详解_JAVA8 十大新特性详解</a></p>
                                                        <p>下一个：<a href="/html/category/article-2675.htm">计算器——安卓移动开发</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6633.htm" title="女士内衣进口哪些品牌值得推荐呢(女士内衣进口哪些品牌值得推荐一下)">女士内衣进口哪些品牌值得推荐呢(女士内衣进口哪些品牌值得推荐一下)</a></li>
                        <li class="py-2"><a href="/html/category/article-6166.htm" title="动物医院申请条件及流程怎么写范文图片（动物医院申请条件及流程怎么写范文图片大全）">动物医院申请条件及流程怎么写范文图片（动物医院申请条件及流程怎么写范文图片大全）</a></li>
                        <li class="py-2"><a href="/html/category/article-5947.htm" title="动物疫苗厂家排名榜前十名有哪些 动物疫苗厂家排名榜前十名有哪些品种">动物疫苗厂家排名榜前十名有哪些 动物疫苗厂家排名榜前十名有哪些品种</a></li>
                        <li class="py-2"><a href="/html/category/article-7092.htm" title="免费领养宠物的app下载安装（免费领养宠物的app下载安装）">免费领养宠物的app下载安装（免费领养宠物的app下载安装）</a></li>
                        <li class="py-2"><a href="/html/category/article-7230.htm" title="梅林（梅林午餐肉）">梅林（梅林午餐肉）</a></li>
                        <li class="py-2"><a href="/html/category/article-6817.htm" title="动物防疫法所称动物防疫（动物防疫法所称动物防疫是指）">动物防疫法所称动物防疫（动物防疫法所称动物防疫是指）</a></li>
                        <li class="py-2"><a href="/html/category/article-4568.htm" title="瑞鹏宠物中心医院在哪里啊（瑞鹏宠物医院总院电话）">瑞鹏宠物中心医院在哪里啊（瑞鹏宠物医院总院电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-6632.htm" title="青岛南京路动物防疫站宠物医院（青岛动物疫病防治中心南京路305号电话）">青岛南京路动物防疫站宠物医院（青岛动物疫病防治中心南京路305号电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-4604.htm" title="成都宠物救助热线电话（成都市宠物救助站是24小时的吗）">成都宠物救助热线电话（成都市宠物救助站是24小时的吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-5588.htm" title="动物医院诊疗范围有哪些项目要求（动物医院诊室）">动物医院诊疗范围有哪些项目要求（动物医院诊室）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>