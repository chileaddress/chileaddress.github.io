<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2842.htm" />
    <title>vue项目在打包时,如何去掉所有的console.log输出_vue.js_ - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>vue项目在打包时,如何去掉所有的console.log输出_vue.js_</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">vue打包去掉所有的console.log输出</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_0_0" rel="nofollow">安装插件</a></li> <li><a href="#_lab2_0_1" rel="nofollow">添加配置</a></li> </ul> <li><a href="#_label1" rel="nofollow">vue npm run build 打包去掉console和警告</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_1_2" rel="nofollow">其实就两行代码就可以了 </a></li> </ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>vue打包去掉所有的console.log输出</h2> <p class="maodian"><a name="_lab2_0_0" rel="nofollow"></a></p> <h3>安装插件</h3> <div class="ay1code"> <pre class="brush:js;">npm install babel-plugin-transform-remove-console --save-dev  </pre> </div> <p class="maodian"><a name="_lab2_0_1" rel="nofollow"></a></p> <h3>添加配置</h3> <p>安装babel-plugin-transform-remove-console开发依赖，然后在项目的babel.config.js的plugin中添加节点。再build就不会有console警告了。</p> <p>如下配置无论在开发环境还是生产环境都会去掉所有的console输出语句。</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220416/bf3eabf99bef8834802f792bc3f816be.jpg"></p> <p>但是babel.config.js文件是全局共享的，无论是开发阶段还是生产阶段，都会移除所有的console，我们想在开发阶段保留console该怎么做呢？</p> <p>如下：</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220416/a51f26a5eaef4d661576b7eb44bcfee4.jpg"></p> <p>代码：</p> <div class="ay1code"> <pre class="brush:js;">// 项目在发布时需要用到的babel插件数组  const proPlugins = [];  // 如果当前是生产环境，则使用去掉console的插件  if (process.env.NODE_ENV === 'production') {      proPlugins.push('transform-remove-console');  }  module.exports = {    presets: [      '@vue/cli-plugin-babel/preset'    ],    plugins:[      ...proPlugins    ]  }  </pre> </div> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>vue npm run build 打包去掉console和警告</h2> <p>在本地开发环境中肯定都会去打印一些数据，但是你如果上传到正式环境呢这些肯定不能再有了，但是你也不能一行一行的去注释掉吧，这样很麻烦所以vue在配置的时候其实是有这个配置的但是需要你自己去配置文件里面修改一下，这样才能方便你的开发二可以达到偷懒的地步。下面就说一下这个配置吧</p> <p class="maodian"><a name="_lab2_1_2" rel="nofollow"></a></p> <h3>其实就两行代码就可以了 </h3> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220416/b5f4993b63a28c13a6fa38ef5ffdf28c.jpg"></p> <p>在build下面的webpack.prod.conf.js里面找到这里添加上</p> <div class="ay1code"> <pre class="brush:js;">drop_console: true,  pure_funcs: [‘console.log']</pre> </div> <p>这两句就可以完美解决了。 </p> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2841.htm">React系列五——event事件</a></p>
                                                        <p>下一个：<a href="/html/category/article-3139.htm">Halo 开源项目学习（六）：事件监听机制_在线工具</a></p>
                                                    </div>

                                                <div class="panel panel-default mt-5">
                            <div class="panel-heading">
                                <h3 class="m-0">推荐文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0">
                                                                        <li class="py-2"><a href="/html/category/article-2792.htm">toString() 和 new String()用法区别</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2748.htm">python——json，dict之间的转换load,dump, loads, dumps</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2744.htm">Spring Security实现基于RBAC的权限表达式动态访问控制</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2739.htm">element-plus  一个vue3.xUI框架 （element-ui的3.x 版初体验）</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2728.htm">pandas apply() 函数用法</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2701.htm">KTL 一个支持C++14编辑公式的K线技术工具平台 &#8211; 第五版，支持sqlite3，全新sqlite3zz语法超简单使用sqlite3; 添加方差等统计函数。</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2677.htm">解决 “TypeError Cannot read properties of undefined (reading ‘xxx‘)“</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2647.htm">安装引入axios</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2575.htm">Kafka集成Kerberos之后如何使用生产者消费者命令</a></li>
                                                                        <li class="py-2"><a href="/html/category/article-2569.htm">centos 7 mini版 rpm 安装mysql5.7过程</a></li>
                                                                    </ul>
                            </div>
                        </div>
                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2768.htm" title="promise与async/await的使用及区别">promise与async/await的使用及区别</a></li>
                        <li class="py-2"><a href="/html/category/article-2776.htm" title="java8 LocalDate LocalTime LocalDateTime ChronoUnit DateTimeFormatter TemporalAdjusters">java8 LocalDate LocalTime LocalDateTime ChronoUnit DateTimeFormatter TemporalAdjusters</a></li>
                        <li class="py-2"><a href="/html/category/article-2820.htm" title="OpenSSL3.0.5安装">OpenSSL3.0.5安装</a></li>
                        <li class="py-2"><a href="/html/category/article-2816.htm" title="SpringBoot/Cloud项目-前台上传图片文件，Java转成Base64保存到数据库完整代码">SpringBoot/Cloud项目-前台上传图片文件，Java转成Base64保存到数据库完整代码</a></li>
                        <li class="py-2"><a href="/html/category/article-2841.htm" title="React系列五——event事件">React系列五——event事件</a></li>
                        <li class="py-2"><a href="/html/category/article-2842.htm" title="vue项目在打包时,如何去掉所有的console.log输出_vue.js_">vue项目在打包时,如何去掉所有的console.log输出_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-2767.htm" title="Spring Boot 容器镜像分层构建">Spring Boot 容器镜像分层构建</a></li>
                        <li class="py-2"><a href="/html/category/article-2809.htm" title="C++11（一）">C++11（一）</a></li>
                        <li class="py-2"><a href="/html/category/article-2775.htm" title="springboot整合Dubbo与Feign的实现 (无注册中心)_java">springboot整合Dubbo与Feign的实现 (无注册中心)_java</a></li>
                        <li class="py-2"><a href="/html/category/article-3139.htm" title="Halo 开源项目学习（六）：事件监听机制_在线工具">Halo 开源项目学习（六）：事件监听机制_在线工具</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>