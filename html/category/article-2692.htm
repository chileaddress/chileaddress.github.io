<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chileaddress.github.io/html/category/article-2692.htm" />
    <title>C\C++ 中 malloc、calloc、realloc 函数的用法 - Chile Address</title>
        <link href="/assets/addons/xcblog/css/chileaddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/addons/xcblog/css/chileaddress/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/chileaddress/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/jquery-1.11.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/chileaddress/bootstrap.min.js"></script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e311768eec030d1b95bf25adcc77f433";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Chile Address</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/html/category/">文章分类</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/html/category/">文章分类</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>C\C++ 中 malloc、calloc、realloc 函数的用法</h1>
                        </div>
                        <div class="about-bottom">
                              				  				  				<div id="content_views" class="htmledit_views"> <h1>C\C++ 中 malloc、calloc、realloc 函数的用法</h1> <p>转自：https://www.jianshu.com/p/d6f209b8796d</p> <p>前言</p> <p>C\C++提供了底层的内存操作，为程序提供了强大的能力。在使用<code>malloc() calloc() realloc()</code> 进行动态内存分配时，内存区域中的这个空间称为堆(heap)，另一个内存区域，称为栈(stack)，其中的空间分配给函数的参数和本地变量，执行完该函数后，存储参数和本地变量的内存空间就会自</p> <p>动释放。而堆中的内存是由人控制的，在分配堆上的内存时，需要人自己来判断什么时候需要分配，什么时候需要释放。</p> <p><code>malloc</code></p> <ol> <li>函数原型<br /><code>(TYPE *) malloc(SIZE)</code></li> <li>函数功能<br /><code>malloc()</code> 在内存的动态存储区中分配一块长度为<code>SIZE</code> 字节的连续区域。参数<code>SIZE</code> 为需要的内存空间的长度，返回该区域的地址。<code>malloc()</code> 函数不能为所分配的空间初始化值，需要使用<code>memset()</code>，不然可能会出现内存中遗留的数据。在程序结束前，需要使用<code>free()</code> 进行内存释放。</li> <li>使用</li> </ol> <pre class="has"><code>int *p = NULL; p = (int *) malloc(sizeof(int)); // 申请 memset(p, 20, sizeof(int) / 4); // 赋初值（不可取） printf("%d\n", *p); // 20 free(p); // 释放</code></pre> <p>主要注意的是，<code>memset()</code> 是按照字节来进行赋值，而<code>char</code> 类型的空间恰好是1字节，所以<code>memset()</code> 最好用于<code>char</code> 类型的赋值。当然，也可以用<code>sizeof(int) / 4</code> 来给<code>int</code> 类型赋值，只不过只能赋 0x00 - oxff 的值。不然的话就是按位赋值四次。</p> <pre class="has"><code>char *p = NULL; p = (char *) malloc(sizeof(char)); memset(p, 'g', sizeof(char)); printf("%c\n", *p); // g free(p); p = NULL;</code></pre> <p>如上，<code>char</code> 类型可以完美的赋值。</p> <p><code>calloc</code></p> <ol> <li>函数原型<br /><code>(TYPE * )calloc(int n, SIZE);</code></li> <li>函数功能<br /><code>calloc()</code> 函数功能和<code>malloc</code> 类似，都是从堆内存中分配内存，不同的是，<code>calloc()</code> 会自动进行初始化，每一位都初始化为零。<code>n</code> 表示元素的个数，<code>SIZE</code> 为单位元素的长度，从定义上看，<code>calloc()</code> 适合为数组申请动态内存。与<code>malloc()</code> 最后也需要使用<code>free()</code> 进行内存释放。</li> <li>使用</li> </ol> <pre class="has"><code>#define SIZE 10 int *p; p = (int *) calloc(SIZE, sizeof(int)); for (int i = 0; i < SIZE; ++i) {     p[i] = i; } for (int j = 0; j < SIZE; ++j) {     printf("%d\n", p[j]); // 0, 1, 2, 3, 4, 5 ... } free(p); p = NULL;</code></pre> <p><code>realloc</code></p> <ol> <li>函数原型<br /><code>(TYPE * )realloc(TYPE *ptr, NEW_SIZE);</code></li> <li>函数功能<br /><code>realloc()</code> 是给一个已经分配了地址的指针重新分配动态内存空间，<code>*ptr</code> 为原有的空间地址，<code>NEW_SIZE</code> 是重新申请的空间，若新的空间小于之前的空间，则不会进行改变，若新的空间大于原来的空间，则会从堆内存中为<code>*ptr</code> 分配一个大小为<code>NEW_SIZE</code> 的空间吗，同时将原来空间的内容依次复制进新的地址空间，<code>*ptr</code> 之前的空间被释放，<code>realloc()</code> 所分配的空间也是未初始化的。</li> <li>使用</li> </ol> <pre class="has"><code>#define SIZE 10 int *p; p = (int *) calloc(SIZE, sizeof(int)); for (int i = 0; i < SIZE; ++i) {     p[i] = i; } p = (int *) realloc(p, SIZE * 2); for (int j = 10; j < SIZE * 2; ++j) {     p[j] = j; } for (int k = 0; k < SIZE * 2; ++k) {     printf("%d\n", p[k]); // 1, 2, 3, ... , 19 } free(p); p</code></pre> </div> 			                            <div class="clearfix"> </div>
                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2691.htm">关于springboot启动时报错 [org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.clas</a></p>
                                                        <p>下一个：<a href="/html/category/article-2693.htm">GMSSL ：SM2椭圆曲线公钥密码算法-密钥交换协议</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4386.htm" title="宠物粮供应商电话（宠物粮供应商电话是多少）">宠物粮供应商电话（宠物粮供应商电话是多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-2809.htm" title="C++11（一）">C++11（一）</a></li>
                        <li class="py-2"><a href="/html/category/article-2812.htm" title="synchronized详解">synchronized详解</a></li>
                        <li class="py-2"><a href="/html/category/article-4603.htm" title="巢湖银鱼的经典做法(巢湖银鱼介绍)">巢湖银鱼的经典做法(巢湖银鱼介绍)</a></li>
                        <li class="py-2"><a href="/html/category/article-3441.htm" title="git 回滚到之前某一commit">git 回滚到之前某一commit</a></li>
                        <li class="py-2"><a href="/html/category/article-2841.htm" title="React系列五——event事件">React系列五——event事件</a></li>
                        <li class="py-2"><a href="/html/category/article-4568.htm" title="瑞鹏宠物中心医院在哪里啊（瑞鹏宠物医院总院电话）">瑞鹏宠物中心医院在哪里啊（瑞鹏宠物医院总院电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-3773.htm" title="如何使用Iintelij IDEA将maven项目打包成war包，并将war包放到tomcat上运行">如何使用Iintelij IDEA将maven项目打包成war包，并将war包放到tomcat上运行</a></li>
                        <li class="py-2"><a href="/html/category/article-3442.htm" title="C#/VB.NET 在Excel单元格中应用多种字体格式_在线工具">C#/VB.NET 在Excel单元格中应用多种字体格式_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-5973.htm" title="宠物领养app的设计与实现论文题目（宠物领养系统国内外现状）">宠物领养app的设计与实现论文题目（宠物领养系统国内外现状）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                <p>
                    Chile Address 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>